"use strict";(self.webpackChunkantd_more=self.webpackChunkantd_more||[]).push([[7152],{31510:function(e,a,n){n.r(a),n.d(a,{demos:function(){return v}});var t,r,o,u,l=n(66373),d=n.n(l),i=n(50408),p=n.n(i),c=n(15237),v={"dictionary-demo-demo1":{component:c.memo(c.lazy((function(){return n.e(3574).then(n.bind(n,21373))}))),asset:{type:"BLOCK",id:"dictionary-demo-demo1",refAtomIds:["dictionary"],dependencies:{"index.tsx":{type:"FILE",value:n(78548).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.25"},"./constants.ts":{type:"FILE",value:n(93265).Z}},entry:"index.tsx"},context:{react:n(15237),"antd-more":n(9794),"./constants.ts":n(91646)},renderOpts:{compile:(u=p()(d()().mark((function e(){var a,t=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(6481),n.e(7251)]).then(n.bind(n,97251));case 2:return e.abrupt("return",(a=e.sent).default.apply(a,t));case 3:case"end":return e.stop()}}),e)}))),function(){return u.apply(this,arguments)})}},"dictionary-demo-demo2":{component:c.memo(c.lazy((function(){return n.e(3574).then(n.bind(n,40435))}))),asset:{type:"BLOCK",id:"dictionary-demo-demo2",refAtomIds:["dictionary"],dependencies:{"index.tsx":{type:"FILE",value:n(91684).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.17.0"},"antd-more":{type:"NPM",value:"4.2.25"},"./constants.ts":{type:"FILE",value:n(93265).Z}},entry:"index.tsx"},context:{react:n(15237),antd:n(6914),"antd-more":n(9794),"./constants.ts":n(91646)},renderOpts:{compile:(o=p()(d()().mark((function e(){var a,t=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(6481),n.e(7251)]).then(n.bind(n,97251));case 2:return e.abrupt("return",(a=e.sent).default.apply(a,t));case 3:case"end":return e.stop()}}),e)}))),function(){return o.apply(this,arguments)})}},"dictionary-demo-demo3":{component:c.memo(c.lazy((function(){return n.e(3574).then(n.bind(n,87995))}))),asset:{type:"BLOCK",id:"dictionary-demo-demo3",refAtomIds:["dictionary"],dependencies:{"index.tsx":{type:"FILE",value:n(52071).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.17.0"},"antd-more":{type:"NPM",value:"4.2.25"}},entry:"index.tsx"},context:{react:n(15237),antd:n(6914),"antd-more":n(9794)},renderOpts:{compile:(r=p()(d()().mark((function e(){var a,t=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(6481),n.e(7251)]).then(n.bind(n,97251));case 2:return e.abrupt("return",(a=e.sent).default.apply(a,t));case 3:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})}},"dictionary-demo-fieldnames":{component:c.memo(c.lazy((function(){return n.e(3574).then(n.bind(n,56910))}))),asset:{type:"BLOCK",id:"dictionary-demo-fieldnames",refAtomIds:["dictionary"],dependencies:{"index.tsx":{type:"FILE",value:n(44808).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.17.0"},"antd-more":{type:"NPM",value:"4.2.25"}},entry:"index.tsx"},context:{react:n(15237),antd:n(6914),"antd-more":n(9794)},renderOpts:{compile:(t=p()(d()().mark((function e(){var a,t=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([n.e(6481),n.e(7251)]).then(n.bind(n,97251));case 2:return e.abrupt("return",(a=e.sent).default.apply(a,t));case 3:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})}}}},91646:function(e,a,n){n.r(a),n.d(a,{ApproveStatus:function(){return t},ApproveStatusOptions:function(){return r}});var t=function(e){return e.Processing="1",e.Approve="2",e.Refused="3",e}({}),r=[{value:t.Processing,label:"审核中",badge:{status:"processing"},tag:{alias:"待审核",color:"orange"}},{value:t.Approve,label:"审核通过",text:{style:{color:"green"}},badge:{status:"success"},tag:{color:"green"}},{value:t.Refused,label:"审核不通过",text:{style:{color:"red"}},badge:{status:"error"},tag:{color:"red"},custom:{color:"purple"}}]},51234:function(e,a,n){n.r(a),n.d(a,{texts:function(){return t}});const t=[{value:"推荐使用 ",paraId:0,tocIndex:0},{value:"BizField",paraId:1,tocIndex:0},{value:" 。",paraId:0,tocIndex:0},{value:"数据字典显示",paraId:2,tocIndex:0},{value:"自动将 ",paraId:3,tocIndex:2},{value:"value",paraId:3,tocIndex:2},{value:" 对应的 ",paraId:3,tocIndex:2},{value:"label",paraId:3,tocIndex:2},{value:" 显示。",paraId:3,tocIndex:2},{value:"通过 ",paraId:4,tocIndex:3},{value:"type",paraId:4,tocIndex:3},{value:" 设置展示方式，支持 ",paraId:4,tocIndex:3},{value:"text",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"tag",paraId:4,tocIndex:3},{value:" ",paraId:4,tocIndex:3},{value:"badge",paraId:4,tocIndex:3},{value:" ，默认为 ",paraId:4,tocIndex:3},{value:"text",paraId:4,tocIndex:3},{value:" 。",paraId:4,tocIndex:3},{value:"在数据字典中配置 ",paraId:5,tocIndex:3},{value:"props",paraId:5,tocIndex:3},{value:"，默认读取 ",paraId:5,tocIndex:3},{value:"type",paraId:5,tocIndex:3},{value:" 对应的配置项，也可以传入 ",paraId:5,tocIndex:3},{value:"optionName",paraId:5,tocIndex:3},{value:" 自定义读取配置名。还有个特别的属性 ",paraId:5,tocIndex:3},{value:"alias",paraId:5,tocIndex:3},{value:" 可以替换 ",paraId:5,tocIndex:3},{value:"label",paraId:5,tocIndex:3},{value:"。",paraId:5,tocIndex:3},{value:"注意：如果展示 ",paraId:6,tocIndex:3},{value:"badge",paraId:6,tocIndex:3},{value:"，一定要有 ",paraId:6,tocIndex:3},{value:"status",paraId:6,tocIndex:3},{value:" 或 ",paraId:6,tocIndex:3},{value:"color",paraId:6,tocIndex:3},{value:"，不然可能显示不了。",paraId:6,tocIndex:3},{value:"value",paraId:7,tocIndex:4},{value:" 是一个数组，",paraId:7,tocIndex:4},{value:"defaultLabel",paraId:7,tocIndex:4},{value:" 仅在 ",paraId:7,tocIndex:4},{value:"value",paraId:7,tocIndex:4},{value:" 为非数组或长度小于 ",paraId:7,tocIndex:4},{value:"0",paraId:7,tocIndex:4},{value:" 时显示。",paraId:7,tocIndex:4},{value:"自定义字段名。",paraId:8,tocIndex:5},{value:"import { Dictionary } from 'antd-more';\n",paraId:9,tocIndex:6},{value:"除了以下参数，其余同 ",paraId:10,tocIndex:6},{value:"Space",paraId:10,tocIndex:6},{value:" 一样。",paraId:10,tocIndex:6},{value:"参数",paraId:11,tocIndex:6},{value:"说明",paraId:11,tocIndex:6},{value:"类型",paraId:11,tocIndex:6},{value:"默认值",paraId:11,tocIndex:6},{value:"valueEnum",paraId:11,tocIndex:6},{value:"数据字典",paraId:11,tocIndex:6},{value:"EnumData",paraId:11,tocIndex:6},{value:"[]",paraId:11,tocIndex:6},{value:"value",paraId:11,tocIndex:6},{value:"当前字典值",paraId:11,tocIndex:6},{value:"ValueType",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"defaultLabel",paraId:11,tocIndex:6},{value:"当找不到字典值对应的名称时，显示默认名称",paraId:11,tocIndex:6},{value:"ReactNode",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"type",paraId:11,tocIndex:6},{value:"显示方式",paraId:11,tocIndex:6},{value:"'text' | 'tag' | 'badge'",paraId:11,tocIndex:6},{value:"'text'",paraId:11,tocIndex:6},{value:"propsName",paraId:11,tocIndex:6},{value:"数据中的配置属性名，默认为 ",paraId:11,tocIndex:6},{value:"type",paraId:11,tocIndex:6},{value:" 值。",paraId:11,tocIndex:6},{value:"string",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"fieldNames",paraId:11,tocIndex:6},{value:"自定义节点 ",paraId:11,tocIndex:6},{value:"label",paraId:11,tocIndex:6},{value:"、",paraId:11,tocIndex:6},{value:"value",paraId:11,tocIndex:6},{value:" 的字段",paraId:11,tocIndex:6},{value:"{label: string; value: string;}",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"match",paraId:11,tocIndex:6},{value:"自定义 value 匹配方法",paraId:11,tocIndex:6},{value:"(itemValue: ValueType, value: ValueType) => boolean;",paraId:11,tocIndex:6},{value:"-",paraId:11,tocIndex:6},{value:"import type { TagProps, BadgeProps, SpaceProps } from 'antd';\n\ntype AliasType = { alias?: ReactNode };\n\ntype EnumItem<ValueType = any> = {\n  label?: ReactNode;\n  value?: ValueType;\n  badge?: Omit<BadgeProps, 'status'> & AliasType & { status?: string };\n  tag?: TagProps & AliasType;\n  text?: HtmlHTMLAttributes<HTMLSpanElement> & AliasType;\n  [key: string]: any;\n};\n\nexport type EnumData<ValueType = any> = EnumItem<ValueType>[];\n",paraId:12,tocIndex:7}]},78548:function(e,a){a.Z="import React from 'react';\nimport { Dictionary } from 'antd-more';\nimport { ApproveStatusOptions } from './constants';\n\nexport default () => {\n  return <Dictionary valueEnum={ApproveStatusOptions} value=\"1\" />;\n};\n"},91684:function(e,a){a.Z='import React from \'react\';\nimport { Divider } from \'antd\';\nimport { Dictionary } from \'antd-more\';\nimport { ApproveStatusOptions } from \'./constants\';\n\nexport default () => {\n  return (\n    <>\n      <Divider orientation="left">empty or notMatch</Divider>\n      <Dictionary valueEnum={ApproveStatusOptions} value={[]} />\n      <br />\n      <Dictionary\n        valueEnum={ApproveStatusOptions}\n        value={[\'5\', \'2\', \'3\']}\n        defaultLabel="not match value"\n      />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="5" defaultLabel="not match value" />\n      <br />\n      <Divider orientation="left">text</Divider>\n      <Dictionary valueEnum={ApproveStatusOptions} value="1" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="2" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" />\n      <br />\n      <Divider orientation="left">tag</Divider>\n      <Dictionary valueEnum={ApproveStatusOptions} value="1" type="tag" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="2" type="tag" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" type="tag" />\n      <br />\n      <Divider orientation="left">badge</Divider>\n      <Dictionary valueEnum={ApproveStatusOptions} value="1" type="badge" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="2" type="badge" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" type="badge" />\n      <br />\n      <Divider orientation="left">自定义</Divider>\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" propsName="custom" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" type="tag" propsName="custom" />\n      <br />\n      <Dictionary valueEnum={ApproveStatusOptions} value="3" type="badge" propsName="custom" />\n    </>\n  );\n};\n'},52071:function(e,a){a.Z="import React from 'react';\nimport { Divider } from 'antd';\nimport { Dictionary } from 'antd-more';\n\nconst BiologyCategoryOtions = [\n  {\n    value: '1',\n    label: '动物',\n    tag: {\n      color: 'orange'\n    }\n  },\n  {\n    value: '2',\n    label: '植物',\n    tag: {\n      color: 'green'\n    }\n  },\n  {\n    value: '3',\n    label: '微生物',\n    custom: {\n      color: 'purple'\n    }\n  }\n];\n\nexport default () => {\n  return (\n    <>\n      <Divider orientation=\"left\">empty</Divider>\n      <Dictionary valueEnum={BiologyCategoryOtions} value={[]} />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={[]} defaultLabel=\"empty\" />\n      <Divider orientation=\"left\">text</Divider>\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['1', '2']} />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['2', '3']} />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['1', '2', '3']} split=\"、\" size={0} />\n      <br />\n      <Divider orientation=\"left\">tag</Divider>\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['1', '2']} type=\"tag\" />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['2', '3']} type=\"tag\" />\n      <br />\n      <Divider orientation=\"left\">自动过滤未匹配的项</Divider>\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['4', '5']} type=\"tag\" />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['4', '5', '1', '2', '3']} type=\"tag\" />\n      <br />\n      <Dictionary valueEnum={BiologyCategoryOtions} value={['1', '2', '3', '4', '5']} type=\"tag\" />\n      <br />\n      <Dictionary\n        valueEnum={BiologyCategoryOtions}\n        value={['1', '2', '4', '5', '3', '2', '3', '4', '5']}\n        type=\"tag\"\n      />\n    </>\n  );\n};\n"},93265:function(e,a){a.Z="// 审核状态\n// 1-审核中 2-审核通过 3-审核不通过\nexport enum ApproveStatus {\n  Processing = '1',\n  Approve = '2',\n  Refused = '3'\n}\n\n// 审核状态选项\nexport const ApproveStatusOptions = [\n  {\n    value: ApproveStatus.Processing,\n    label: '审核中',\n    badge: {\n      status: 'processing'\n    },\n    tag: {\n      alias: '待审核',\n      color: 'orange'\n    }\n  },\n  {\n    value: ApproveStatus.Approve,\n    label: '审核通过',\n    text: {\n      style: {\n        color: 'green'\n      }\n    },\n    badge: {\n      status: 'success'\n    },\n    tag: {\n      color: 'green'\n    }\n  },\n  {\n    value: ApproveStatus.Refused,\n    label: '审核不通过',\n    text: {\n      style: {\n        color: 'red'\n      }\n    },\n    badge: {\n      status: 'error'\n    },\n    tag: {\n      color: 'red'\n    },\n    custom: {\n      color: 'purple'\n    }\n  }\n];\n"},44808:function(e,a){a.Z="import * as React from 'react';\nimport { Divider } from 'antd';\nimport { Dictionary } from 'antd-more';\n\nconst CurrencyData = [\n  {\n    symbol: '¥',\n    code: 'CNY',\n    name: '人民币'\n  },\n  {\n    symbol: '$',\n    code: 'USD',\n    name: '美元'\n  },\n  {\n    symbol: '€',\n    code: 'EUR',\n    name: '欧元'\n  },\n  {\n    symbol: '￡',\n    code: 'GBP',\n    name: '英镑'\n  }\n];\n\nfunction Demo() {\n  return (\n    <>\n      <Dictionary\n        value=\"CNY\"\n        valueEnum={CurrencyData}\n        fieldNames={{ label: 'symbol', value: 'code' }}\n      />\n      <br />\n      <Dictionary\n        value=\"CNY\"\n        valueEnum={CurrencyData}\n        fieldNames={{ label: 'name', value: 'code' }}\n      />\n      <br />\n      <Dictionary\n        value=\"人民币\"\n        valueEnum={CurrencyData}\n        fieldNames={{ label: 'symbol', value: 'name' }}\n        type=\"tag\"\n      />\n      <br />\n      <Divider orientation=\"left\">多个枚举</Divider>\n      <Dictionary\n        value={['CNY', 'GBP']}\n        valueEnum={CurrencyData}\n        fieldNames={{ label: 'symbol', value: 'code' }}\n      />\n      <br />\n      <Dictionary\n        value={['CNY', 'GBP']}\n        valueEnum={CurrencyData}\n        fieldNames={{ label: 'name', value: 'code' }}\n        type=\"tag\"\n      />\n    </>\n  );\n}\n\nexport default Demo;\n"}}]);