"use strict";(self.webpackChunkantd_more=self.webpackChunkantd_more||[]).push([[9824],{60984:function(e,o,a){a.r(o),a.d(o,{demos:function(){return I}});var n,t,r,l=a(55039),d=a.n(l),c=a(46011),u=a.n(c),p=a(93762),I={"color-demo-demo1":{component:p.memo(p.lazy((function(){return a.e(8102).then(a.bind(a,9173))}))),asset:{type:"BLOCK",id:"color-demo-demo1",refAtomIds:["color"],dependencies:{"index.tsx":{type:"FILE",value:a(48372).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.30"}},entry:"index.tsx"},context:{react:a(93762),"antd-more":a(81420)},renderOpts:{compile:(r=u()(d()().mark((function e(){var o,n=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([a.e(9082),a.e(9327)]).then(a.bind(a,79327));case 2:return e.abrupt("return",(o=e.sent).default.apply(o,n));case 3:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})}},"color-demo-demo2":{component:p.memo(p.lazy((function(){return a.e(8102).then(a.bind(a,51164))}))),asset:{type:"BLOCK",id:"color-demo-demo2",refAtomIds:["color"],dependencies:{"index.tsx":{type:"FILE",value:a(76360).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.30"}},entry:"index.tsx"},context:{react:a(93762),"antd-more":a(81420)},renderOpts:{compile:(t=u()(d()().mark((function e(){var o,n=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([a.e(9082),a.e(9327)]).then(a.bind(a,79327));case 2:return e.abrupt("return",(o=e.sent).default.apply(o,n));case 3:case"end":return e.stop()}}),e)}))),function(){return t.apply(this,arguments)})}},"color-demo-demo3":{component:p.memo(p.lazy((function(){return a.e(8102).then(a.bind(a,96052))}))),asset:{type:"BLOCK",id:"color-demo-demo3",refAtomIds:["color"],dependencies:{"index.tsx":{type:"FILE",value:a(56868).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.18.1"},"antd-more":{type:"NPM",value:"4.2.30"}},entry:"index.tsx"},context:{react:a(93762),antd:a(55291),"antd-more":a(81420)},renderOpts:{compile:(n=u()(d()().mark((function e(){var o,n=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all([a.e(9082),a.e(9327)]).then(a.bind(a,79327));case 2:return e.abrupt("return",(o=e.sent).default.apply(o,n));case 3:case"end":return e.stop()}}),e)}))),function(){return n.apply(this,arguments)})}}}},4773:function(e,o,a){a.r(o),a.d(o,{texts:function(){return n}});const n=[{value:"推荐使用 ",paraId:0,tocIndex:0},{value:"BizField",paraId:1,tocIndex:0},{value:" 、 ",paraId:0,tocIndex:0},{value:"BizFormItemColor",paraId:2,tocIndex:0},{value:" 。",paraId:0,tocIndex:0},{value:"用于显示/选择颜色",paraId:3,tocIndex:0},{value:"设置 ",paraId:4,tocIndex:2},{value:"showText",paraId:4,tocIndex:2},{value:" 显示颜色值文本。",paraId:4,tocIndex:2},{value:"支持设置颜色选择器位置、颜色模式（",paraId:5,tocIndex:3},{value:"rgb",paraId:5,tocIndex:3},{value:"、",paraId:5,tocIndex:3},{value:"hex",paraId:5,tocIndex:3},{value:"）。",paraId:5,tocIndex:3},{value:"其中 ",paraId:6,tocIndex:3},{value:"ColorChromePicker",paraId:6,tocIndex:3},{value:" ",paraId:6,tocIndex:3},{value:"ColorSketchPicker",paraId:6,tocIndex:3},{value:" 在颜色模式为 ",paraId:6,tocIndex:3},{value:"rgb",paraId:6,tocIndex:3},{value:" 时，支持设置透明度。",paraId:6,tocIndex:3},{value:"import { Color } from 'antd-more';\n",paraId:7,tocIndex:6},{value:"参数",paraId:8,tocIndex:6},{value:"说明",paraId:8,tocIndex:6},{value:"类型",paraId:8,tocIndex:6},{value:"默认值",paraId:8,tocIndex:6},{value:"value",paraId:8,tocIndex:6},{value:"颜色值",paraId:8,tocIndex:6},{value:"string",paraId:8,tocIndex:6},{value:"-",paraId:8,tocIndex:6},{value:"showText",paraId:8,tocIndex:6},{value:"显示颜色值文本",paraId:8,tocIndex:6},{value:"boolean",paraId:8,tocIndex:6},{value:"false",paraId:8,tocIndex:6},{value:"size",paraId:8,tocIndex:6},{value:"颜色块大小",paraId:8,tocIndex:6},{value:"'small' | 'middle'",paraId:8,tocIndex:6},{value:"'small'",paraId:8,tocIndex:6},{value:"import {\n  ColorBlockPicker,\n  ColorChromePicker,\n  ColorCompactPicker,\n  ColorPhotoshopPicker,\n  ColorSketchPicker\n} from 'antd-more';\n",paraId:9,tocIndex:7},{value:"参数",paraId:10,tocIndex:7},{value:"说明",paraId:10,tocIndex:7},{value:"类型",paraId:10,tocIndex:7},{value:"默认值",paraId:10,tocIndex:7},{value:"value",paraId:10,tocIndex:7},{value:"颜色值",paraId:10,tocIndex:7},{value:"string",paraId:10,tocIndex:7},{value:"-",paraId:10,tocIndex:7},{value:"onChange",paraId:10,tocIndex:7},{value:"当颜色值变动后触发。",paraId:10,tocIndex:7},{value:"(color: string) => void",paraId:10,tocIndex:7},{value:"-",paraId:10,tocIndex:7},{value:"colorMode",paraId:10,tocIndex:7},{value:"颜色模式",paraId:10,tocIndex:7},{value:"'hex' | 'rgb'",paraId:10,tocIndex:7},{value:"'hex'",paraId:10,tocIndex:7},{value:"disabled",paraId:10,tocIndex:7},{value:"禁止选择",paraId:10,tocIndex:7},{value:"boolean",paraId:10,tocIndex:7},{value:"false",paraId:10,tocIndex:7},{value:"placement",paraId:10,tocIndex:7},{value:"颜色选择浮层位置",paraId:10,tocIndex:7},{value:"'top' | 'left' | 'right' | 'bottom' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight' | 'leftTop' | 'leftBottom' | 'rightTop' | 'rightBottom'",paraId:10,tocIndex:7},{value:"'bottomLeft'",paraId:10,tocIndex:7},{value:"size",paraId:10,tocIndex:7},{value:"颜色块大小",paraId:10,tocIndex:7},{value:"'small' | 'middle'",paraId:10,tocIndex:7},{value:"'small'",paraId:10,tocIndex:7},{value:"showText",paraId:10,tocIndex:7},{value:"显示颜色值文本",paraId:10,tocIndex:7},{value:"boolean",paraId:10,tocIndex:7},{value:"false",paraId:10,tocIndex:7},{value:"trigger",paraId:10,tocIndex:7},{value:"触发行为",paraId:10,tocIndex:7},{value:"string | string[]",paraId:10,tocIndex:7},{value:"'click'",paraId:10,tocIndex:7},{value:"pickerProps",paraId:10,tocIndex:7},{value:"不同选择器有不同的属性，更多信息可查阅 ",paraId:10,tocIndex:7},{value:"react-color",paraId:10,tocIndex:7},{value:" 。",paraId:10,tocIndex:7},{value:"BlockPickerProps | ChromePickerProps | CompactPickerProps | | PhotoshopPickerProps | SketchPickerProps",paraId:10,tocIndex:7},{value:"-",paraId:10,tocIndex:7}]},48372:function(e,o){o.Z='import React from \'react\';\nimport { Color } from \'antd-more\';\n\nexport default () => {\n  return (\n    <>\n      <Color />\n      <br />\n      <Color value="#e60000" />\n      <br />\n      <Color value="#e60000" showText />\n      <br />\n      <Color value="#e60000" size="middle" />\n      <br />\n      <Color value="#e60000" size="middle" showText />\n    </>\n  );\n};\n'},76360:function(e,o){o.Z="import React, { useState } from 'react';\nimport {\n  ColorBlockPicker,\n  ColorChromePicker,\n  ColorCompactPicker,\n  ColorPhotoshopPicker,\n  ColorSketchPicker\n} from 'antd-more';\n\nexport default () => {\n  const [color1, setColor1] = useState('#e60000');\n  const [color2, setColor2] = useState('rgba(255,127,0,1)');\n  const [color3, setColor3] = useState('#fcdc00');\n  const [color4, setColor4] = useState('#a4dd00');\n  const [color5, setColor5] = useState('rgba(104,204,202,1)');\n\n  return (\n    <>\n      <h3>ColorBlockPicker</h3>\n      <ColorBlockPicker value={color1} onChange={setColor1} showText />\n      <br />\n      <br />\n      <h3>ColorChromePicker</h3>\n      <ColorChromePicker\n        value={color2}\n        onChange={setColor2}\n        showText\n        colorMode=\"rgb\"\n        placement=\"topLeft\"\n      />\n      <p style={{ fontSize: 13, color: 'gray' }}>禁止选择：</p>\n      <ColorChromePicker\n        value={color2}\n        onChange={setColor2}\n        showText\n        colorMode=\"rgb\"\n        placement=\"topLeft\"\n        disabled\n      />\n      <br />\n      <br />\n      <h3>ColorCompactPicker</h3>\n      <ColorCompactPicker value={color3} onChange={setColor3} showText />\n      <br />\n      <br />\n      <h3>ColorPhotoshopPicker</h3>\n      <ColorPhotoshopPicker value={color4} onChange={setColor4} showText placement=\"topLeft\" />\n      <br />\n      <br />\n      <h3>ColorSketchPicker</h3>\n      <ColorSketchPicker\n        value={color5}\n        onChange={setColor5}\n        showText\n        colorMode=\"rgb\"\n        placement=\"topLeft\"\n      />\n    </>\n  );\n};\n"},56868:function(e,o){o.Z='import React, { useState, useCallback } from \'react\';\nimport { Form, Button } from \'antd\';\nimport { ColorBlockPicker, ColorSketchPicker } from \'antd-more\';\n\nconst formItemLayouts = {\n  labelCol: { span: 6 },\n  wrapperCol: { span: 16 }\n};\n\nconst buttonItemLayouts = {\n  wrapperCol: { span: 16, offset: 6 }\n};\n\nconst initialValues = {\n  color1: \'#e60000\',\n  color2: \'rgba(255,127,0,1)\'\n};\n\nexport default () => {\n  const [result, setResult] = useState(initialValues);\n  const onFinish = useCallback((values) => {\n    setResult(values);\n  }, []);\n\n  return (\n    <>\n      <Form {...formItemLayouts} initialValues={initialValues} onFinish={onFinish}>\n        <Form.Item label="颜色1" name="color1">\n          <ColorBlockPicker showText />\n        </Form.Item>\n        <Form.Item label="颜色2" name="color2">\n          <ColorSketchPicker colorMode="rgb" placement="topLeft" size="middle" />\n        </Form.Item>\n        <Form.Item {...buttonItemLayouts}>\n          <Button type="primary" htmlType="submit">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      <br />\n      <div>\n        form values:\n        {JSON.stringify(result)}\n      </div>\n    </>\n  );\n};\n'}}]);