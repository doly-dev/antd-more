"use strict";(self.webpackChunkantd_more=self.webpackChunkantd_more||[]).push([[5569],{70418:function(e,n,t){t.r(n),t.d(n,{demos:function(){return f}});var r,a,o,i,s,l=t(41187),d=t.n(l),u=t(40800),p=t.n(u),c=t(36905),f={"file-viewer-demo-basic":{component:c.memo(c.lazy((function(){return t.e(7857).then(t.bind(t,49199))}))),asset:{type:"BLOCK",id:"file-viewer-demo-basic",refAtomIds:["file-viewer"],dependencies:{"index.tsx":{type:"FILE",value:t(26037).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.18.3"},"antd-more":{type:"NPM",value:"4.2.32"}},entry:"index.tsx"},context:{react:t(36905),antd:t(65137),"antd-more":t(78061)},renderOpts:{compile:(s=p()(d()().mark((function e(){var n,r=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(3075).then(t.bind(t,13075));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,r));case 3:case"end":return e.stop()}}),e)}))),function(){return s.apply(this,arguments)})}},"file-viewer-demo-multiple":{component:c.memo(c.lazy((function(){return t.e(7857).then(t.bind(t,57316))}))),asset:{type:"BLOCK",id:"file-viewer-demo-multiple",refAtomIds:["file-viewer"],dependencies:{"index.tsx":{type:"FILE",value:t(46833).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.18.3"},"antd-more":{type:"NPM",value:"4.2.32"}},entry:"index.tsx"},context:{react:t(36905),antd:t(65137),"antd-more":t(78061)},renderOpts:{compile:(i=p()(d()().mark((function e(){var n,r=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(3075).then(t.bind(t,13075));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,r));case 3:case"end":return e.stop()}}),e)}))),function(){return i.apply(this,arguments)})}},"file-viewer-demo-custom":{component:c.memo(c.lazy((function(){return t.e(7857).then(t.bind(t,44274))}))),asset:{type:"BLOCK",id:"file-viewer-demo-custom",refAtomIds:["file-viewer"],dependencies:{"index.tsx":{type:"FILE",value:t(69965).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.18.3"},"antd-more":{type:"NPM",value:"4.2.32"},"./OfdView.tsx":{type:"FILE",value:t(14001).Z},"ofd-pageview":{type:"NPM",value:"1.4.4"},"rc-hooks":{type:"NPM",value:"3.0.11"}},entry:"index.tsx"},context:{react:t(36905),antd:t(65137),"antd-more":t(78061),"./OfdView.tsx":t(4002),"ofd-pageview":t(16862),"rc-hooks":t(17329)},renderOpts:{compile:(o=p()(d()().mark((function e(){var n,r=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(3075).then(t.bind(t,13075));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,r));case 3:case"end":return e.stop()}}),e)}))),function(){return o.apply(this,arguments)})}},"file-viewer-demo-upload-file-viewer":{component:c.memo(c.lazy((function(){return t.e(7857).then(t.bind(t,6523))}))),asset:{type:"BLOCK",id:"file-viewer-demo-upload-file-viewer",refAtomIds:["file-viewer"],dependencies:{"index.tsx":{type:"FILE",value:t(90816).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},ut2:{type:"NPM",value:"1.9.1"},"./utils/fileUtils.ts":{type:"FILE",value:t(92310).Z},"./services.ts":{type:"FILE",value:t(33311).Z},"util-helpers":{type:"NPM",value:"5.0.1"}},entry:"index.tsx"},context:{react:t(36905),"antd-more":t(78061),ut2:t(77892),"./utils/fileUtils.ts":t(90139),"./services.ts":t(13131),"util-helpers":t(19707)},renderOpts:{compile:(a=p()(d()().mark((function e(){var n,r=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(3075).then(t.bind(t,13075));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,r));case 3:case"end":return e.stop()}}),e)}))),function(){return a.apply(this,arguments)})}},"file-viewer-demo-upload":{component:c.memo(c.lazy((function(){return t.e(7857).then(t.bind(t,59556))}))),asset:{type:"BLOCK",id:"file-viewer-demo-upload",refAtomIds:["file-viewer"],dependencies:{"index.tsx":{type:"FILE",value:t(32214).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"./OfdView.tsx":{type:"FILE",value:t(14001).Z},"ofd-pageview":{type:"NPM",value:"1.4.4"},"rc-hooks":{type:"NPM",value:"3.0.11"},antd:{type:"NPM",value:"5.18.3"}},entry:"index.tsx"},context:{react:t(36905),"antd-more":t(78061),"./OfdView.tsx":t(4002),"ofd-pageview":t(16862),"rc-hooks":t(17329),antd:t(65137)},renderOpts:{compile:(r=p()(d()().mark((function e(){var n,r=arguments;return d()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(3075).then(t.bind(t,13075));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,r));case 3:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})}}}},13131:function(e,n,t){t.r(n),t.d(n,{downloadFile:function(){return u},uploadFile:function(){return l}});var r=t(41187),a=t.n(r),o=t(40800),i=t.n(o),s=t(79791);function l(e){return d.apply(this,arguments)}function d(){return(d=i()(a()().mark((function e(n){return a()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("uploadFile: ",n),e.next=3,(0,s.Z)(2e3);case 3:if(!(Math.random()>.2)){e.next=5;break}return e.abrupt("return",{fssid:"".concat(Math.random().toString(16).substring(2))});case 5:throw new Error("error");case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function u(e){return p.apply(this,arguments)}function p(){return(p=i()(a()().mark((function e(n){return a()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log("downloadFile: ",n),e.next=3,(0,s.Z)(2e3);case 3:if(!(Math.random()>.2)){e.next=5;break}return e.abrupt("return",{data:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"});case 5:throw new Error("error");case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},90139:function(e,n,t){t.r(n),t.d(n,{fssidToUploadFile:function(){return m},uploadFileToFssid:function(){return v},wrapperUploadFile:function(){return c}});var r=t(55182),a=t.n(r),o=t(86118),i=t.n(o),s=t(79818),l=t(15922),d=t(73294),u=t(8642),p=t(13131);function c(e){return i()({uid:(0,s.Z)(),status:"done",thumbUrl:null==e?void 0:e.url,name:""},e)}var f=new(t(4204).Z)({max:20,maxStrategy:"replaced",stdTTL:6e5,prefix:"fileUtils"});function m(e){if(!e)return Promise.resolve([]);var n=(0,d.Z)(e),t=[];return n.forEach((function(e){t.push(f.run((function(){return(0,p.downloadFile)(e).then((function(n){return{url:n.data,fssid:e}})).catch((function(n){return Promise.reject({error:n,message:"文件加载失败",fssid:e})}))}),e))})),Promise.allSettled(t).then((function(e){return e.map((function(e){return"fulfilled"===e.status?c({name:e.value.url,response:{fssid:e.value.fssid},url:e.value.url}):c({status:"error",error:e.reason.message,response:{fssid:e.reason.fssid}})}))}))}function v(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t=[];return(0,u.Z)(e)&&e.forEach((function(e){if(e&&"object"===a()(e)&&"object"===a()(e.response)){var r=e.response.fssid||e.response.fssId;n&&!r||t.push(r)}})),t}f.cache.on("del",(function(e,n){(0,l.Z)(n)&&n.fileUrl&&URL.revokeObjectURL(n.fileUrl)}))},4002:function(e,n,t){t.r(n);var r=t(40988),a=t.n(r),o=t(47081),i=t.n(o),s=t(36905),l=t(16862),d=t(85695),u=t(58130),p=t(29388);n.default=function(e){var n=e.fileUrl,t=e.fileName,r=e.screenWidth,o=(0,s.useRef)(null),c=(0,d.Z)(!1),f=i()(c,2),m=f[0],v=f[1];return(0,s.useEffect)((function(){o.current&&(v(!0),o.current.innerHTML="",(0,l.parseOfdDocument)({ofd:n,success:function(e){var n,t,i=e[0],s=r||(null===(n=o.current)||void 0===n?void 0:n.clientWidth)||800,d=(0,l.renderOfd)(s,i),u=a()(d);try{for(u.s();!(t=u.n()).done;){var p=t.value;o.current&&o.current.appendChild(p)}}catch(e){u.e(e)}finally{u.f()}v(!1)},error:function(e){v(!1),console.error(e),o.current&&(o.current.innerHTML="该文件不支持预览，你可尝试<a href=".concat(n," download=").concat(t,">点击下载</a>。"))}}))}),[t,n,r,v]),(0,p.jsx)(u.Z,{spinning:m,children:(0,p.jsx)("div",{ref:o})})}},54540:function(e,n,t){t.r(n),t.d(n,{texts:function(){return r}});const r=[{value:"目前已支持 ",paraId:0,tocIndex:0},{value:"image",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"audoi",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"video",paraId:0,tocIndex:0},{value:" ",paraId:0,tocIndex:0},{value:"pdf",paraId:0,tocIndex:0},{value:" 等文件类型预览，其他文件类型会提供点击下载提示。",paraId:0,tocIndex:0},{value:"适用于详情页展示。",paraId:1,tocIndex:6},{value:"参数",paraId:2,tocIndex:8},{value:"说明",paraId:2,tocIndex:8},{value:"类型",paraId:2,tocIndex:8},{value:"默认值",paraId:2,tocIndex:8},{value:"file",paraId:2,tocIndex:8},{value:"需要预览的文件。支持 ",paraId:2,tocIndex:8},{value:"url",paraId:2,tocIndex:8},{value:" 或 ",paraId:2,tocIndex:8},{value:"UploadFile",paraId:2,tocIndex:8},{value:" 。",paraId:2,tocIndex:8},{value:"string | UploadFile",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"open",paraId:2,tocIndex:8},{value:"显示文件预览",paraId:2,tocIndex:8},{value:"boolean",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"onCancel",paraId:2,tocIndex:8},{value:"触发关闭文件预览时执行",paraId:2,tocIndex:8},{value:"() => void",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"renderView",paraId:2,tocIndex:8},{value:"自定义文件预览渲染",paraId:2,tocIndex:8},{value:"(dom: React.ReactElement, props: FileViewerProps) => React.ReactNode",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"className",paraId:2,tocIndex:8},{value:"class 类",paraId:2,tocIndex:8},{value:"string",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"style",paraId:2,tocIndex:8},{value:"样式",paraId:2,tocIndex:8},{value:"CSSProperties",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"modalProps",paraId:2,tocIndex:8},{value:"同 ",paraId:2,tocIndex:8},{value:"antd Modal",paraId:2,tocIndex:8},{value:" 配置。",paraId:2,tocIndex:8},{value:"ModalProps",paraId:2,tocIndex:8},{value:"-",paraId:2,tocIndex:8},{value:"不支持 ",paraId:3,tocIndex:9},{value:"file",paraId:3,tocIndex:9},{value:" ，请使用 ",paraId:3,tocIndex:9},{value:"fileList",paraId:3,tocIndex:9},{value:"。",paraId:3,tocIndex:9},{value:"除了以下配置，和 ",paraId:4,tocIndex:9},{value:"FileViewer",paraId:4,tocIndex:9},{value:" 几乎相同。",paraId:4,tocIndex:9},{value:"参数",paraId:5,tocIndex:9},{value:"说明",paraId:5,tocIndex:9},{value:"类型",paraId:5,tocIndex:9},{value:"默认值",paraId:5,tocIndex:9},{value:"fileList",paraId:5,tocIndex:9},{value:"需要预览的文件列表。",paraId:5,tocIndex:9},{value:"UploadFile[]",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"uploadProps",paraId:5,tocIndex:9},{value:"同 ",paraId:5,tocIndex:9},{value:"antd Upload",paraId:5,tocIndex:9},{value:" 配置。",paraId:5,tocIndex:9},{value:"UploadProps",paraId:5,tocIndex:9},{value:"-",paraId:5,tocIndex:9},{value:"获取文件 ",paraId:6,tocIndex:11},{value:"url",paraId:6,tocIndex:11},{value:" 。",paraId:6,tocIndex:11},{value:"获取文件类型。",paraId:7,tocIndex:12},{value:"获取缩略图，适用于 ",paraId:8,tocIndex:13},{value:"Upload",paraId:8,tocIndex:13},{value:" 和 ",paraId:8,tocIndex:13},{value:"FileViewer.PictureCard",paraId:8,tocIndex:13},{value:" 组件。内置了 ",paraId:8,tocIndex:13},{value:"audio",paraId:8,tocIndex:13},{value:" ",paraId:8,tocIndex:13},{value:"excel",paraId:8,tocIndex:13},{value:" ",paraId:8,tocIndex:13},{value:"file",paraId:8,tocIndex:13},{value:" ",paraId:8,tocIndex:13},{value:"pdf",paraId:8,tocIndex:13},{value:" ",paraId:8,tocIndex:13},{value:"video",paraId:8,tocIndex:13},{value:" ",paraId:8,tocIndex:13},{value:"word",paraId:8,tocIndex:13},{value:" 缩略图标。",paraId:8,tocIndex:13},{value:"获取预览缩略图，适用于 ",paraId:9,tocIndex:14},{value:"Upload",paraId:9,tocIndex:14},{value:" 组件。",paraId:9,tocIndex:14},{value:"删除预览缩略图，适用于 ",paraId:10,tocIndex:15},{value:"Upload",paraId:10,tocIndex:15},{value:" 组件。",paraId:10,tocIndex:15}]},33311:function(e,n){n.Z="import { sleep } from 'ut2';\n\n// 上传文件\nexport async function uploadFile(file: File): Promise<{ fssid: string }> {\n  console.log('uploadFile: ', file);\n\n  await sleep(2000);\n  if (Math.random() > 0.2) {\n    return {\n      fssid: `${Math.random().toString(16).substring(2)}`\n    };\n  }\n  throw new Error('error');\n}\n\n// 下载文件\nexport async function downloadFile(fssid: string) {\n  console.log('downloadFile: ', fssid);\n\n  await sleep(2000);\n  if (Math.random() > 0.2) {\n    return {\n      data: `https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png`\n    };\n  }\n  throw new Error('error');\n}\n"},90816:function(e,n){n.Z="import * as React from 'react';\nimport type { UploadFile } from 'antd';\nimport { BizForm, BizFormItemUpload, FileViewer } from 'antd-more';\nimport { sleep } from 'ut2';\nimport { uploadFile } from './services';\nimport { uploadFileToFssid } from './utils/fileUtils';\n\nconst Demo = () => {\n  const [fileInfo, setFileInfo] = React.useState<UploadFile>();\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div>\n      <BizForm\n        name=\"upload-file-viewer\"\n        onFinish={async (values) => {\n          await sleep();\n          console.log(values);\n        }}\n        labelWidth={98}\n      >\n        <BizFormItemUpload\n          name=\"files\"\n          label=\"任意文件\"\n          type=\"image\"\n          accept=\"*\"\n          maxCount={9}\n          maxSize={1024 * 1024 * 10}\n          multiple\n          required\n          onUpload={uploadFile}\n          transform={uploadFileToFssid}\n          uploadProps={{\n            onPreview(file) {\n              setFileInfo(file);\n              setOpen(true);\n            },\n            onRemove: FileViewer.removeFile,\n            previewFile: FileViewer.previewFile\n          }}\n        />\n      </BizForm>\n      <FileViewer open={open} onCancel={() => setOpen(false)} file={fileInfo} />\n    </div>\n  );\n};\n\nexport default Demo;\n"},92310:function(e,n){n.Z="import type { UploadFile } from 'antd';\nimport { castArray, isArray, isObject, uniqueId } from 'ut2';\nimport { downloadFile } from '../services';\nimport { AsyncMemo } from 'util-helpers';\n\nexport function wrapperUploadFile<T = any>(opts: Partial<UploadFile>) {\n  return {\n    uid: uniqueId(),\n    status: 'done',\n    thumbUrl: opts?.url,\n    name: '',\n    ...opts\n  } as UploadFile<T>;\n}\n\n// async function transformUploadFile(\n//   data: API.Filedownload['data'],\n//   fssid: string,\n//   enabledParseZip: boolean,\n// ) {\n//   const fileKey = data.fileInfo?.fileKey;\n//   if (enabledParseZip && fileKey && fileKey.slice(-3) === 'zip') {\n//     let files: ZipDataType[] = [];\n//     try {\n//       files = await parseZip(data.buffer);\n//       // console.log(files);\n//     } catch (e) {\n//       console.error(e);\n//     }\n//     return files.map((item) =>\n//       wrapperUploadFile({ url: URL.createObjectURL(item.blob), response: { fssid: item.fssid } }),\n//     );\n//   }\n//   const file = setDataURLPrefix(data.buffer);\n//   return [\n//     wrapperUploadFile({\n//       url: URL.createObjectURL(dataURLToBlob(file)),\n//       response: { fssid },\n//     }),\n//   ];\n// }\n\nconst asyncMemo = new AsyncMemo({\n  max: 20,\n  maxStrategy: 'replaced',\n  stdTTL: 10 * 60 * 1000,\n  prefix: 'fileUtils'\n});\nasyncMemo.cache.on('del', (key, value) => {\n  if (isObject(value) && value.fileUrl) {\n    URL.revokeObjectURL(value.fileUrl);\n  }\n});\n\n// 通过 fssid 转为 UploadFile\n// 适用于详情页图片展示、表单回显\nexport function fssidToUploadFile<T = any>(fssid: string | string[]): Promise<UploadFile<T>[]> {\n  if (!fssid) {\n    return Promise.resolve([]);\n  }\n\n  const ids = castArray(fssid);\n  const tasks: Promise<{ url: string; fssid: string }>[] = [];\n\n  ids.forEach((id) => {\n    tasks.push(\n      asyncMemo.run(\n        () =>\n          // 如果有特殊处理可以在此次修改，例如解压zip文件（注意修改类型和后续处理）\n          downloadFile(id)\n            .then((res) => ({ url: res.data, fssid: id }))\n            .catch((error) => {\n              return Promise.reject({ error, message: '文件加载失败', fssid: id });\n            }),\n        id\n      )\n    );\n  });\n\n  return Promise.allSettled(tasks).then((result) =>\n    result.map((item) => {\n      if (item.status === 'fulfilled') {\n        return wrapperUploadFile({\n          name: item.value.url,\n          response: {\n            fssid: item.value.fssid\n          },\n          url: item.value.url\n        });\n      }\n\n      return wrapperUploadFile({\n        status: 'error',\n        error: item.reason.message,\n        response: {\n          fssid: item.reason.fssid\n        }\n      });\n    })\n  );\n}\n\n// 通过 UploadFile 转为 fssid\n// 表单提交时提取出上传文件的 fssid\nexport function uploadFileToFssid(fileList: UploadFile[], nil: false): (string | undefined)[];\nexport function uploadFileToFssid(fileList: UploadFile[], nil?: true): string[];\nexport function uploadFileToFssid(fileList: any, nil = true) {\n  const result: string[] = [];\n  if (isArray(fileList)) {\n    fileList.forEach((item) => {\n      if (item && typeof item === 'object' && typeof item.response === 'object') {\n        const fssid = item.response.fssid || item.response.fssId; // 部分项目中没有严格区分 fssId 和 fssid\n        if (!nil || fssid) {\n          result.push(fssid);\n        }\n      }\n    });\n  }\n  return result;\n}\n"},14001:function(e,n){n.Z="import React, { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { parseOfdDocument, renderOfd } from 'ofd-pageview';\nimport { useSafeState } from 'rc-hooks';\nimport { Spin } from 'antd';\n\ninterface OfdViewProps {\n  fileUrl: string;\n  fileName?: string;\n  screenWidth?: number;\n}\n\nconst OfdView: React.FC<OfdViewProps> = ({ fileUrl, fileName, screenWidth }) => {\n  const contentRef = useRef<HTMLDivElement>(null);\n  const [processing, setProcessing] = useSafeState(false);\n\n  useEffect(() => {\n    if (contentRef.current) {\n      setProcessing(true);\n      contentRef.current.innerHTML = '';\n      parseOfdDocument({\n        ofd: fileUrl,\n        success(res: any) {\n          const ofdObj = res[0];\n          const width = screenWidth || contentRef.current?.clientWidth || 800;\n          const divs = renderOfd(width, ofdObj);\n          for (const div of divs) {\n            if (contentRef.current) {\n              contentRef.current.appendChild(div);\n            }\n          }\n          setProcessing(false);\n        },\n        error(err: any) {\n          setProcessing(false);\n          console.error(err);\n          if (contentRef.current) {\n            contentRef.current.innerHTML = `该文件不支持预览，你可尝试<a href=${fileUrl} download=${fileName}>点击下载</a>。`;\n          }\n        }\n      });\n    }\n  }, [fileName, fileUrl, screenWidth, setProcessing]);\n\n  return (\n    <Spin spinning={processing}>\n      <div ref={contentRef} />\n    </Spin>\n  );\n};\n\nexport default OfdView;\n"},26037:function(e,n){n.Z="import * as React from 'react';\nimport { Button } from 'antd';\nimport { FileViewer } from 'antd-more';\n\nfunction Demo() {\n  const [open1, setOpen1] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n\n  return (\n    <div>\n      <Button onClick={() => setOpen1(true)}>预览图片-UploadFile</Button>\n      <Button onClick={() => setOpen2(true)}>预览图片-url</Button>\n      <FileViewer\n        file={{\n          uid: '-1',\n          url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n          name: '图片文件名称111'\n        }}\n        open={open1}\n        onCancel={() => setOpen1(false)}\n      />\n      <FileViewer\n        file=\"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png\"\n        open={open2}\n        onCancel={() => setOpen2(false)}\n      />\n    </div>\n  );\n}\n\nexport default Demo;\n"},69965:function(e,n){n.Z="import React from 'react';\nimport type { UploadFile } from 'antd';\nimport { Button } from 'antd';\nimport { FileViewer } from 'antd-more';\nimport TestOfd from './assets/test.ofd';\nimport OfdView from './OfdView';\n\nconst data = {\n  ofd: {\n    uid: '-1',\n    url: TestOfd,\n    name: 'test.ofd'\n  }\n};\n\nfunction Demo() {\n  const [open, setOpen] = React.useState(false);\n  const [fileInfo, setFileInfo] = React.useState<UploadFile>();\n  const preview = async (type: string) => {\n    setFileInfo(data[type]);\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Button onClick={() => preview('ofd')}>预览ofd</Button>\n      <FileViewer\n        file={fileInfo}\n        open={open}\n        onCancel={() => setOpen(false)}\n        renderView={(dom, { file }) => {\n          const name = typeof file === 'string' ? '' : file.name;\n          const url = typeof file === 'string' ? file : file.url || file.preview;\n          if (url && (name.slice(-4) === '.ofd' || url.slice(-4) === '.ofd')) {\n            return <OfdView fileUrl={url} />;\n          }\n          return dom;\n        }}\n        modalProps={{\n          width: 1200\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Demo;\n"},46833:function(e,n){n.Z="import * as React from 'react';\nimport type { UploadFile } from 'antd';\nimport { Button } from 'antd';\nimport { FileViewer } from 'antd-more';\nimport TestImage from './assets/test.jpg';\nimport TestAudio from './assets/test.mp3';\nimport TestVideo from './assets/test.mp4';\nimport TestPdf from './assets/test.pdf';\nimport TestWord from './assets/test.docx';\nimport TestExcel from './assets/test.xlsx';\nimport TestZip from './assets/test.zip';\n\nconst data = {\n  image: {\n    uid: '-1',\n    url: TestImage,\n    name: 'test.jpg'\n  },\n  audio: {\n    uid: '-2',\n    url: TestAudio,\n    name: 'test.mp3'\n  },\n  video: {\n    uid: '-3',\n    url: TestVideo,\n    name: 'test.mp4'\n  },\n  pdf: {\n    uid: '-4',\n    url: TestPdf,\n    name: 'test.pdf'\n  },\n  word: {\n    uid: '-5',\n    url: TestWord,\n    name: 'test.docx'\n  },\n  excel: {\n    uid: '-6',\n    url: TestExcel,\n    name: 'test.xlsx'\n  },\n  zip: {\n    uid: '-7',\n    url: TestZip,\n    name: 'test.zip'\n  }\n};\n\nfunction Demo() {\n  const [open, setOpen] = React.useState(false);\n  const [fileInfo, setFileInfo] = React.useState<UploadFile>();\n  const preview = (type) => {\n    setFileInfo(data[type]);\n    setOpen(true);\n  };\n\n  return (\n    <div>\n      <Button onClick={() => preview('image')}>预览图片</Button>\n      <Button onClick={() => preview('audio')}>预览音频</Button>\n      <Button onClick={() => preview('video')}>预览视频</Button>\n      <Button onClick={() => preview('pdf')}>预览pdf</Button>\n      <Button onClick={() => preview('word')}>预览word</Button>\n      <Button onClick={() => preview('excel')}>预览excel</Button>\n      <Button onClick={() => preview('zip')}>预览zip</Button>\n      <FileViewer file={fileInfo} open={open} onCancel={() => setOpen(false)} />\n    </div>\n  );\n}\n\nexport default Demo;\n"},32214:function(e,n){n.Z="import * as React from 'react';\nimport { FileViewer } from 'antd-more';\nimport TestImage from './assets/test.jpg';\nimport TestAudio from './assets/test.mp3';\nimport TestVideo from './assets/test.mp4';\nimport TestPdf from './assets/test.pdf';\nimport TestWord from './assets/test.docx';\nimport TestExcel from './assets/test.xlsx';\nimport TestZip from './assets/test.zip';\nimport TestOfd from './assets/test.ofd';\nimport OfdView from './OfdView';\n\nconst fileList = [\n  {\n    uid: '-1',\n    url: TestImage,\n    name: 'test.jpg'\n  },\n  {\n    uid: '-2',\n    url: TestAudio,\n    name: 'test.mp3'\n  },\n  {\n    uid: '-3',\n    url: TestVideo,\n    name: 'test.mp4'\n  },\n  {\n    uid: '-4',\n    url: TestPdf,\n    name: 'test.pdf'\n  },\n  {\n    uid: '-5',\n    url: TestWord,\n    name: 'test.docx'\n  },\n  {\n    uid: '-6',\n    url: TestExcel,\n    name: 'test.xlsx'\n  },\n  {\n    uid: '-7',\n    url: TestZip,\n    name: 'test.zip'\n  },\n  {\n    uid: '-8',\n    url: TestOfd,\n    name: 'test.ofd'\n  }\n].map((item) => ({\n  ...item,\n  thumbUrl: FileViewer.getFileThumbUrl(item)\n}));\n\nfunction Demo() {\n  return (\n    <FileViewer.PictureCard\n      fileList={fileList}\n      renderView={(dom, { file }) => {\n        const name = typeof file === 'string' ? '' : file.name;\n        const url = typeof file === 'string' ? file : file.url || file.preview;\n        if (url && (name.slice(-4) === '.ofd' || url.slice(-4) === '.ofd')) {\n          return <OfdView fileUrl={url} />;\n        }\n        return dom;\n      }}\n    />\n  );\n}\n\nexport default Demo;\n"}}]);