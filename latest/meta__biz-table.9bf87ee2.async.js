"use strict";(self.webpackChunkantd_more=self.webpackChunkantd_more||[]).push([[2332],{68020:function(e,n,t){t.r(n),t.d(n,{demos:function(){return y}});var a,r,o,u,l,d,i,p,c,s,m=t(5799),I=t.n(m),v=t(81619),f=t.n(v),x=t(14181),y={"biz-table-demo-demo1":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,73969))}))),asset:{type:"BLOCK",id:"biz-table-demo-demo1",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(61092).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(s=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return s.apply(this,arguments)})}},"biz-table-demo-demo2":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,52874))}))),asset:{type:"BLOCK",id:"biz-table-demo-demo2",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(62978).Z},react:{type:"NPM",value:"18.3.1"},"util-helpers":{type:"NPM",value:"5.0.1"},antd:{type:"NPM",value:"5.18.3"},"antd-more":{type:"NPM",value:"4.2.32"},"./constants.ts":{type:"FILE",value:t(47882).Z},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"util-helpers":t(20022),antd:t(55065),"antd-more":t(12988),"./constants.ts":t(96504),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(c=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return c.apply(this,arguments)})}},"biz-table-demo-define-render":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,90146))}))),asset:{type:"BLOCK",id:"biz-table-demo-define-render",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(98600).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"./constants.ts":{type:"FILE",value:t(47882).Z},"./service.ts":{type:"FILE",value:t(96627).Z},"./utils/field.tsx":{type:"FILE",value:t(37478).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"},"util-helpers":{type:"NPM",value:"5.0.1"},antd:{type:"NPM",value:"5.18.3"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),"./constants.ts":t(96504),"./service.ts":t(56450),"./utils/field.tsx":t(62319),mockjs:t(82259),ut2:t(94690),"util-helpers":t(20022),antd:t(55065)},renderOpts:{compile:(p=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return p.apply(this,arguments)})}},"biz-table-demo-demo3":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,23734))}))),asset:{type:"BLOCK",id:"biz-table-demo-demo3",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(51086).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(i=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return i.apply(this,arguments)})}},"biz-table-demo-formitems":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,53660))}))),asset:{type:"BLOCK",id:"biz-table-demo-formitems",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(41651).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(d=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return d.apply(this,arguments)})}},"biz-table-demo-async-initial-values":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,92993))}))),asset:{type:"BLOCK",id:"biz-table-demo-async-initial-values",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(28243).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},ut2:{type:"NPM",value:"1.9.1"},"./constants.ts":{type:"FILE",value:t(47882).Z},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),ut2:t(94690),"./constants.ts":t(96504),"./service.ts":t(56450),mockjs:t(82259)},renderOpts:{compile:(l=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return l.apply(this,arguments)})}},"biz-table-demo-search-form-ref-1":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,56780))}))),asset:{type:"BLOCK",id:"biz-table-demo-search-form-ref-1",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(49855).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},"util-helpers":{type:"NPM",value:"5.0.1"},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),"util-helpers":t(20022),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(u=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return u.apply(this,arguments)})}},"biz-table-demo-freight":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,25879))}))),asset:{type:"BLOCK",id:"biz-table-demo-freight",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(70048).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.18.3"},"antd-more":{type:"NPM",value:"4.2.32"},"rc-hooks":{type:"NPM",value:"3.0.11"},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"},"./components/FreightRule.tsx":{type:"FILE",value:t(56344).Z},classnames:{type:"NPM",value:"2.5.1"},"./index.module.less":{type:"FILE",value:t(25093).Z}},entry:"index.tsx"},context:{react:t(14181),antd:t(55065),"antd-more":t(12988),"rc-hooks":t(56432),mockjs:t(82259),ut2:t(94690),"./components/FreightRule.tsx":t(89350),classnames:t(89825),"./index.module.less":t(1431)},renderOpts:{compile:(o=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return o.apply(this,arguments)})}},"biz-table-demo-polling":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,96736))}))),asset:{type:"BLOCK",id:"biz-table-demo-polling",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(20073).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},antd:{type:"NPM",value:"5.18.3"},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),antd:t(55065),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(r=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return r.apply(this,arguments)})}},"biz-table-demo-demo4":{component:x.memo(x.lazy((function(){return t.e(7423).then(t.bind(t,7164))}))),asset:{type:"BLOCK",id:"biz-table-demo-demo4",refAtomIds:["biz-table"],dependencies:{"index.tsx":{type:"FILE",value:t(10379).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.32"},lcn:{type:"NPM",value:"5.0.6"},"./constants.ts":{type:"FILE",value:t(47882).Z},"./service.ts":{type:"FILE",value:t(96627).Z},mockjs:{type:"NPM",value:"1.1.0"},ut2:{type:"NPM",value:"1.9.1"}},entry:"index.tsx"},context:{react:t(14181),"antd-more":t(12988),lcn:t(35494),"./constants.ts":t(96504),"./service.ts":t(56450),mockjs:t(82259),ut2:t(94690)},renderOpts:{compile:(a=f()(I()().mark((function e(){var n,a=arguments;return I()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,t.e(4281).then(t.bind(t,64281));case 2:return e.abrupt("return",(n=e.sent).default.apply(n,a));case 3:case"end":return e.stop()}}),e)}))),function(){return a.apply(this,arguments)})}}}},89350:function(e,n,t){t.r(n),t.d(n,{FreightRuleOptions:function(){return y},FreightRuleType:function(){return x}});var a=t(99393),r=t.n(a),o=t(86795),u=t.n(o),l=t(58171),d=t.n(l),i=t(14181),p=t(23617),c=t(24346),s=t(89825),m=t.n(s),I=t(1431),v=t(18154),f=["id","freight","freightRule","onChange","className"],x=function(e){return e.Need="0",e.No="1",e.NoExpress="2",e}({}),y=[{label:"包邮",value:x.No},{label:"不包邮",value:x.Need},{label:"不配送",value:x.NoExpress}];n.default=function(e){var n=e.id,t=e.freight,a=e.freightRule,o=e.onChange,l=e.className,s=d()(e,f),g=i.useRef(null),h=i.useState(t),b=u()(h,2),T=b[0],R=b[1],z=i.useCallback((function(e){var t=e.target.value,a=t!==x.Need?0:T;R(a),null==o||o({id:n,freightRule:t,freight:a}),t===x.Need&&g&&setTimeout((function(){var e;null===(e=g.current)||void 0===e||e.focus()}),0)}),[T,n,o]),B=i.useCallback((function(e){R(e),null==o||o({id:n,freightRule:a,freight:e})}),[a,n,o]);return(0,v.jsx)(p.ZP.Group,r()(r()({className:m()(I.default.wrapper,l),onChange:z,value:a},s),{},{children:y.map((function(e){var t="id"+n+e.value;return(0,v.jsxs)(p.ZP,{value:e.value,children:[e.label,e.value===x.Need&&a===x.Need&&(0,v.jsxs)("div",{className:I.default.inputWrapper,style:a!==x.Need?{display:"none"}:{},children:[(0,v.jsx)("label",{htmlFor:t,children:"运费"}),(0,v.jsx)(c.Z,{name:t,id:t,value:T,precision:2,min:0,max:999,onChange:B,ref:g}),"元"]})]},e.value)}))}))}},96504:function(e,n,t){t.r(n),t.d(n,{ApproveStatus:function(){return a},ApproveStatusOptions:function(){return r},Bank:function(){return o},BankOptions:function(){return u}});var a=function(e){return e.Processing="1",e.Approve="2",e.Refused="3",e}({}),r=[{label:"待审核",value:a.Processing,badge:{status:"processing"}},{label:"审核通过",value:a.Approve,badge:{status:"success"}},{label:"审核拒绝",value:a.Refused,badge:{status:"error"}}],o=function(e){return e.BOC="BOC",e.BCM="BCM",e.ABC="ABC",e}({}),u=[{label:"中国银行",value:o.BOC},{label:"交通银行",value:o.BCM},{label:"中国农业银行",value:o.ABC}]},56450:function(e,n,t){t.r(n),t.d(n,{getApplyList:function(){return m}});var a=t(5799),r=t.n(a),o=t(81619),u=t.n(o),l=t(40386),d=t.n(l),i=t(82259),p=t.n(i),c=t(98458),s=function(e){var n=e.page,t=(n.pageNum,n.pageSize);e.data;return p().mock(d()(d()({},"data|".concat(t),[{applyCode:"@word(6)",applicantName:"@cname",approverName:"@cname",createTime:"@datetime",approveTime:"@datetime","approveResult|1":["1","2","3"],"money|0-10000.0-2":0,remark:"@cword(10,20)"}]),"pageInfo",{total:50,pages:10}))};function m(e){return I.apply(this,arguments)}function I(){return(I=u()(r()().mark((function e(n){return r()().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,(0,c.Z)();case 2:return e.abrupt("return",s(n));case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},62319:function(e,n,t){t.r(n),t.d(n,{renderBase64Buffer:function(){return c},renderLongOmitted:function(){return i},renderMoney:function(){return p},renderRemark:function(){return s},renderStatusWithRemark:function(){return m}});t(14181);var a=t(88726),r=t(31535),o=t(88668),u=t(99362),l=t(12666),d=t(18154),i=function(e){if(e&&e.length>10){var n=e.substring(0,3),t=e.substring(e.length-2);return"".concat(n,"...").concat(t)}return e},p=function(e){return"number"==typeof e&&!isNaN(e)||e&&"string"==typeof e?"¥".concat((0,a.Z)((0,r.Z)(e,100))):"-"},c=function(e){if(e){var n=(0,o.Z)(e);return(0,d.jsx)(u.Z,{valueType:"image",value:n})}return"-"};function s(e){var n="string"==typeof e&&e.indexOf("\n")>-1?(0,d.jsx)(d.Fragment,{children:e.split("\n").map((function(e){return(0,d.jsx)("div",{style:{marginBottom:5},children:e},e)}))}):e;return(0,d.jsx)(l.Z.Text,{style:{maxWidth:160,color:"gray"},ellipsis:{tooltip:n},children:n||"-"})}var m=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";return(0,d.jsxs)("div",{children:[(0,d.jsx)(u.Z,{value:e,valueType:"enumBadge",valueEnum:n}),t&&(0,d.jsx)("div",{children:s(t)})]})}},56432:function(e,n,t){t.r(n),t.d(n,{clearCache:function(){return a.L},useAsync:function(){return a.Z},useClickAway:function(){return A},useControllableValue:function(){return M.Z},useDebounce:function(){return x},useDebounceFn:function(){return f},useLatest:function(){return v.Z},useLimitList:function(){return h},useLoadMore:function(){return c},useMount:function(){return B.Z},useMountedRef:function(){return T.Z},usePagination:function(){return s.Z},usePersistFn:function(){return u.Z},usePrevious:function(){return R},useSafeState:function(){return z.Z},useSetState:function(){return b.Z},useSize:function(){return q},useThrottle:function(){return g.Z},useThrottleFn:function(){return y.Z},useUnmount:function(){return I.Z},useUnmountedRef:function(){return C.Z},useUpdate:function(){return N.Z},useUpdateEffect:function(){return p.Z},useUpdateLayoutEffect:function(){return F}});var a=t(58179),r=t(1413),o=t(14181),u=t(71840),l=function(e){return null!=e&&e===(null==e?void 0:e.window)};function d(e){return"function"==typeof e?e():e}var i=function(e){var n=void 0===e?{}:e,t=n.target,a=n.threshold,r=void 0===a?100:a,i=n.onScrollLower,p=void 0===i?function(){}:i,c=(0,u.Z)(p),s=(0,o.useCallback)((function(){if(t){var e,n=d(t);if(n)void 0===(e=n)&&(e=window),("undefined"==typeof window?0:l(e)?document.documentElement.scrollHeight:e.scrollHeight)-function(e){return void 0===e&&(e=window),"undefined"==typeof window?0:l(e)?window.scrollY:(null==e?void 0:e.scrollTop)||0}(n)<=function(e){return void 0===e&&(e=window),"undefined"==typeof window?0:l(e)?document.documentElement.clientHeight:e.clientHeight}(n)+r&&c()}}),[c,t,r]);(0,o.useEffect)((function(){if(t){var e=d(t);if(e)return e.addEventListener("scroll",s),function(){e.removeEventListener("scroll",s)}}}),[t,s])},p=t(18477);var c=function(e,n){var t=n||{},u=t.threshold,l=void 0===u?100:u,d=t.target,c=t.isNoMore,s=void 0===c?function(){return!1}:c,m=t.refreshDeps,I=void 0===m?[]:m,v=t.autoRun,f=void 0===v||v,x=(0,r._T)(t,["threshold","target","isNoMore","refreshDeps","autoRun"]),y=(0,o.useRef)([]),g=(0,o.useRef)(1),h=(0,a.Z)(e,(0,r.pi)((0,r.pi)({defaultParams:[{current:g.current}],autoRun:f},x),{onError:function(e,n){var t;g.current>1&&(g.current-=1),null===(t=null==x?void 0:x.onError)||void 0===t||t.call(x,e,n)},__INTERNAL_FORMAT__:function(e){return y.current=1===g.current?e.list:y.current.concat(e.list),(0,r.pi)((0,r.pi)({},e),{list:y.current})}})),b=h.run,T=h.data,R=h.loading,z=h.cancel,B=h.params,C=h.mutate,N=(0,r._T)(h,["run","data","loading","cancel","params","mutate"]),F=!!s&&(!R&&s(T)),k=(0,r.CR)(B||[]),P=k[0],S=k.slice(1),w=(0,o.useCallback)((function(){return b.apply(void 0,[{current:g.current}].concat(S))}),[S,b]),A=(0,o.useCallback)((function(){R&&g.current>1&&(g.current-=1),z()}),[z,R]),M=(0,o.useCallback)((function(){R||F||(g.current+=1,w())}),[R,F,w]),L=(0,o.useCallback)((function(e){var n="function"==typeof e?e(T):e;y.current=(null==n?void 0:n.list)||[],C(n)}),[T,C]),E=(0,o.useCallback)((function(){return A(),g.current=1,L((function(e){return(0,r.pi)((0,r.pi)({},e),{list:[]})})),w()}),[A,w,L]),Z=(0,o.useCallback)((function(){if(!R&&d)return M()}),[M,d,R]);return i({target:d,threshold:l,onScrollLower:Z}),(0,p.Z)((function(){f&&Array.isArray(I)&&I.length>0&&E()}),I),(0,r.pi)((0,r.pi)({},N),{loading:R,data:T,run:b,refresh:E,cancel:A,mutate:L,params:[(0,r.pi)((0,r.pi)({},P),{current:g.current})].concat(S),loadMore:M,loadingMore:R&&g.current>1,noMore:F})},s=t(57887),m=t(37708),I=t(26034),v=t(9342);var f=function(e,n,t){void 0===n&&(n=0),void 0===t&&(t=!1);var a=(0,v.Z)(e),r=(0,o.useRef)((0,m.Z)((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return a.current.apply(void 0,e)}),n,t));return(0,I.Z)((function(){r.current.cancel()})),{run:r.current,cancel:r.current.cancel,flush:r.current.flush}};var x=function(e,n,t){void 0===n&&(n=0),void 0===t&&(t=!1);var a=(0,r.CR)((0,o.useState)(e),2),u=a[0],l=a[1],d=f(l,n,t).run;return(0,o.useEffect)((function(){d(e)}),[d,e]),u},y=t(78963),g=t(16909);var h=function(e,n){void 0===e&&(e=[]),void 0===n&&(n={});var t=n||{},a=t.count,u=void 0===a?3:a,l=t.defaultLimited,d=void 0===l||l,i=(0,o.useRef)(d),p=(0,o.useMemo)((function(){return Array.isArray(e)?e:[]}),[e]),c=(0,o.useMemo)((function(){return u>0?Math.ceil(u):0}),[u]),s=(0,o.useMemo)((function(){return p.length>c}),[c,p.length]),m=(0,r.CR)((0,o.useState)((function(){return s&&d?p.slice(0,c):p})),2),I=m[0],v=m[1];return(0,o.useEffect)((function(){v(i.current?p.slice(0,c):p)}),[c,p]),{canLimit:s,limited:i.current,data:I,toggle:function(){s&&(i.current=!i.current),v(i.current?p.slice(0,c):p)}}},b=t(89170),T=t(75325);function R(e){var n=(0,T.Z)(),t=(0,o.useRef)(),a=(0,o.useRef)(e);return n.current&&a.current!==e&&(t.current=a.current,a.current=e),t.current}var z=t(2670),B=t(62752),C=t(14415),N=t(64209),F=function(e,n){var t=(0,o.useRef)(!1);(0,o.useLayoutEffect)((function(){if(t.current)return e();t.current=!0}),n)},k=t(63809),P=t(9591),S=t.n(P);var w=function(e){return"function"==typeof e?e():"object"===S()(e)&&e&&"current"in e?e.current:e};var A=function(e,n,t){void 0===t&&(t="click");var a=(0,k.Z)(e),r=(0,v.Z)(a),u=a.every((function(e){return"function"==typeof e})),l=u?r:a,d=(0,v.Z)(n),i=(0,k.Z)(t),p=(0,v.Z)(i),c=i.join("");(0,o.useEffect)((function(){var e=function(e){var n;(u?l.current:l).some((function(n){var t=w(n);return!t||(null==t?void 0:t.contains(e.target))}))||null===(n=d.current)||void 0===n||n.call(d,e)},n=(0,k.Z)(p.current);return n.forEach((function(n){document.addEventListener(n,e)})),function(){n.forEach((function(n){document.removeEventListener(n,e)}))}}),[l,u,c])},M=t(35473),L=t(94250),E="undefined"!=typeof window&&"undefined"!=typeof document&&window.document===document,Z=["top","right","bottom","left","width","height","size","weight"],D={characterData:!0,childList:!0,attributes:!0,subtree:!0},O=function(e){var n=this;this.refresh=function(){n.targetNode&&n.callback([{target:n.targetNode}],{})},this.onTransitionEnd_=function(e){var t=e.propertyName,a=void 0===t?"":t;Z.some((function(e){return a.indexOf(e)>-1}))&&n.throttleRefresh()},this.observe=function(e,t){E&&(n.targetNode=e,document.addEventListener("transitionend",n.onTransitionEnd_),window.addEventListener("resize",n.throttleRefresh),n.observer.observe(document,(0,r.pi)((0,r.pi)({},D),t)))},this.disconnect=function(){E&&(n.throttleRefresh.cancel(),n.targetNode=null,document.removeEventListener("transitionend",n.onTransitionEnd_),window.removeEventListener("resize",n.throttleRefresh),n.observer.disconnect())},this.throttleRefresh=(0,L.Z)(this.refresh,50),this.targetNode=null,this.callback=e,this.observer=new MutationObserver(this.throttleRefresh)};var q=function(e){var n=(0,v.Z)(e),t="function"==typeof e,a=t?n:e,u=(0,r.CR)((0,o.useState)((function(){var n=w(e);return{width:null==n?void 0:n.clientWidth,height:null==n?void 0:n.clientHeight}})),2),l=u[0],d=u[1];return(0,o.useEffect)((function(){var e=w(t?a.current:a);function n(e){e&&d({width:e.clientWidth,height:e.clientHeight})}if(!e)return function(){};n(e);var r=new O((function(e){e.forEach((function(e){n(e.target)}))}));return r.observe(e),function(){r.disconnect()}}),[a,t]),l}},1431:function(e,n,t){t.r(n),n.default={wrapper:"VaMgH6DrCkCYYvfRlxML",inputWrapper:"tjmpkbbSMvkk04ObtrzK"}},27398:function(e,n,t){t.r(n),t.d(n,{texts:function(){return a}});const a=[{value:"基于 antd Table 扩展了表单（BizForm）、字段（BizField）、分页等功能。",paraId:0,tocIndex:0},{value:"只需定义 ",paraId:1,tocIndex:2},{value:"request",paraId:1,tocIndex:2},{value:" ",paraId:1,tocIndex:2},{value:"rowKey",paraId:1,tocIndex:2},{value:" ",paraId:1,tocIndex:2},{value:"columns",paraId:1,tocIndex:2},{value:" 。",paraId:1,tocIndex:2},{value:"自定义查询表单操作，表单默认值，默认展示 1 个表单项，扩展区域，工具栏区域。",paraId:2,tocIndex:3},{value:"日期时间换行、金额分转元、base64 图片、超长省略等字段展示。",paraId:3,tocIndex:4},{value:"将 BizField 不支持的展示字段，抽象到 ",paraId:4,tocIndex:4},{value:"utils/field.tsx",paraId:4,tocIndex:4},{value:" 文件。",paraId:4,tocIndex:4},{value:"设置 ",paraId:5,tocIndex:5},{value:"compact",paraId:5,tocIndex:5},{value:" 将去掉表格容器的内间距和阴影，一般用于纯表格，详情页展示。",paraId:5,tocIndex:5},{value:"不推荐使用该方式，更推荐 ",paraId:6,tocIndex:6},{value:"columns",paraId:6,tocIndex:6},{value:" 中配置 ",paraId:6,tocIndex:6},{value:"search",paraId:6,tocIndex:6},{value:" 。",paraId:6,tocIndex:6},{value:"当有 ",paraId:7,tocIndex:6},{value:"formItems",paraId:7,tocIndex:6},{value:" 配置时， ",paraId:7,tocIndex:6},{value:"columns",paraId:7,tocIndex:6},{value:" 配置的 ",paraId:7,tocIndex:6},{value:"search",paraId:7,tocIndex:6},{value:" 将失效。",paraId:7,tocIndex:6},{value:"5 秒后获取到初始值再发起请求。",paraId:8,tocIndex:7},{value:"不改变查询表单的 ",paraId:9,tocIndex:8},{value:"initialValues",paraId:9,tocIndex:8},{value:"，而是通过 ",paraId:9,tocIndex:8},{value:"formRef",paraId:9,tocIndex:8},{value:" 设置表单值，再进行查询，这样不影响查询表单的重置操作。比如通过 URL 带一些默认查询参数。",paraId:9,tocIndex:8},{value:"如果需要自动获取 URL 的 search 并且支持 keep-alive 激活时调用，可参考 ",paraId:10,tocIndex:8},{value:"未展示示例",paraId:10,tocIndex:8},{value:" 的 init 方法。",paraId:10,tocIndex:8},{value:"仅使用表格的 ",paraId:11,tocIndex:9},{value:"field",paraId:11,tocIndex:9},{value:" 转换功能，如果不使用 ",paraId:11,tocIndex:9},{value:"request",paraId:11,tocIndex:9},{value:"，需将 ",paraId:11,tocIndex:9},{value:"autoRequest",paraId:11,tocIndex:9},{value:" 设为 ",paraId:11,tocIndex:9},{value:"false",paraId:11,tocIndex:9},{value:"。",paraId:11,tocIndex:9},{value:"设置 ",paraId:12,tocIndex:10},{value:"asyncOptions.pollingInterval",paraId:12,tocIndex:10},{value:" 之后，将定时使用上一次的参数发起请求。",paraId:12,tocIndex:10},{value:"你可以输入查询表单，再打开控制台查看请求参数。",paraId:13,tocIndex:10},{value:"除了以下参数，其余和 antd ",paraId:14,tocIndex:13},{value:"Table",paraId:14,tocIndex:13},{value:" 组件一样。",paraId:14,tocIndex:13},{value:"参数",paraId:15,tocIndex:13},{value:"说明",paraId:15,tocIndex:13},{value:"类型",paraId:15,tocIndex:13},{value:"默认值",paraId:15,tocIndex:13},{value:"request",paraId:15,tocIndex:13},{value:"获取 ",paraId:15,tocIndex:13},{value:"dataSource",paraId:15,tocIndex:13},{value:" 的方法",paraId:15,tocIndex:13},{value:"Request",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"autoRequest",paraId:15,tocIndex:13},{value:"初始化时自动触发 ",paraId:15,tocIndex:13},{value:"request",paraId:15,tocIndex:13},{value:"boolean",paraId:15,tocIndex:13},{value:"true",paraId:15,tocIndex:13},{value:"ready",paraId:15,tocIndex:13},{value:"为 ",paraId:15,tocIndex:13},{value:"false",paraId:15,tocIndex:13},{value:" 时，禁止提交/重置表单，不触发 ",paraId:15,tocIndex:13},{value:"request",paraId:15,tocIndex:13},{value:" 。",paraId:15,tocIndex:13},{value:"为 ",paraId:15,tocIndex:13},{value:"true",paraId:15,tocIndex:13},{value:" 时，会重新设置表单初始值，如果 ",paraId:15,tocIndex:13},{value:"autoRequest=true",paraId:15,tocIndex:13},{value:" 则自动请求。",paraId:15,tocIndex:13},{value:"boolean",paraId:15,tocIndex:13},{value:"true",paraId:15,tocIndex:13},{value:"nowrap",paraId:15,tocIndex:13},{value:"单元格内容不会换行，表格宽度超过 100%自动处理横向滚动条。",paraId:15,tocIndex:13},{value:"如果要设置单元格宽度，请关闭该配置 或 ",paraId:15,tocIndex:13},{value:"column",paraId:15,tocIndex:13},{value:" 的 ",paraId:15,tocIndex:13},{value:"nowrap",paraId:15,tocIndex:13},{value:" 设置为 ",paraId:15,tocIndex:13},{value:"false",paraId:15,tocIndex:13},{value:"。",paraId:15,tocIndex:13},{value:"boolean",paraId:15,tocIndex:13},{value:"true",paraId:15,tocIndex:13},{value:"formItems",paraId:15,tocIndex:13},{value:"查询表单项，推荐使用 ",paraId:15,tocIndex:13},{value:"columns.search",paraId:15,tocIndex:13},{value:" 配置",paraId:15,tocIndex:13},{value:"ReactNode[]",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"toolbar",paraId:15,tocIndex:13},{value:"工具栏，表格内的上面区域",paraId:15,tocIndex:13},{value:"ReactNode",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"toolbarAction",paraId:15,tocIndex:13},{value:"工具栏右侧显示内置工具",paraId:15,tocIndex:13},{value:"boolean | { reload?: boolean; density?: boolean; fullScreen?: boolean; columnSetting?: boolean; }",paraId:15,tocIndex:13},{value:"false",paraId:15,tocIndex:13},{value:"toolbarRender",paraId:15,tocIndex:13},{value:"自定义工具栏渲染。",paraId:15,tocIndex:13},{value:"如果有设置 toolbarAction，参数 dom 包含了右侧内置工具。",paraId:15,tocIndex:13},{value:"(dom: ReactElement) => ReactNode",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"fullScreenBackgroundColor",paraId:15,tocIndex:13},{value:"全屏时显示的背景颜色",paraId:15,tocIndex:13},{value:"string",paraId:15,tocIndex:13},{value:"rgba(255,255,255,0.25)",paraId:15,tocIndex:13},{value:"extra",paraId:15,tocIndex:13},{value:"扩展内容，表格外的上面、查询表单下面的区域",paraId:15,tocIndex:13},{value:"ReactNode",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"form",paraId:15,tocIndex:13},{value:"同 ",paraId:15,tocIndex:13},{value:"QueryForm",paraId:16,tocIndex:13},{value:" 配置参数",paraId:15,tocIndex:13},{value:"QueryFormProps",paraId:17,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"formRef",paraId:15,tocIndex:13},{value:"获取查询表单的 ",paraId:15,tocIndex:13},{value:"form",paraId:15,tocIndex:13},{value:" 实例",paraId:15,tocIndex:13},{value:"MutableRefObject<FormInstance | undefined>",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"actionRef",paraId:15,tocIndex:13},{value:"常用操作引用，便于自定义触发",paraId:15,tocIndex:13},{value:"MutableRefObject<ActionType | undefined>",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"tableRender",paraId:15,tocIndex:13},{value:"自定义表格渲染",paraId:15,tocIndex:13},{value:"(props: BizTableProps<RecordType>, dom: ReactElement) => ReactNode",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"asyncOptions",paraId:15,tocIndex:13},{value:"异步请求配置，同 ",paraId:15,tocIndex:13},{value:"useAsync",paraId:15,tocIndex:13},{value:" 部分参数。",paraId:15,tocIndex:13},{value:"{ cacheKey?: string; cacheTime?: number; pollingInterval?: number; pollingWhenHidden?: boolean; refreshOnWindowFocus?: boolean; focusTimespan?: number; }",paraId:15,tocIndex:13},{value:"-",paraId:15,tocIndex:13},{value:"compact",paraId:15,tocIndex:13},{value:"表格容器去掉内间距和阴影。一般纯表格情况下使用。",paraId:15,tocIndex:13},{value:"boolean",paraId:15,tocIndex:13},{value:"false",paraId:15,tocIndex:13},{value:"只需按照提供的参数发起请求，并处理成相应的返回值格式即可。",paraId:18,tocIndex:14},{value:"返回的 ",paraId:19,tocIndex:14},{value:"data",paraId:19,tocIndex:14},{value:" 用于设置 Table 的 dataSource ，",paraId:19,tocIndex:14},{value:"total",paraId:19,tocIndex:14},{value:" 用于设置分页。",paraId:19,tocIndex:14},{value:"type BizTableRequest<RecordType = any> = (\n  params: {\n    // 分页和查询表单项的值\n    pageSize?: number;\n    current?: number;\n    [key: string]: any;\n  },\n  filters: Record<string, (string | number)[] | null>, // 过滤筛选\n  sorter: SorterResult<RecordType> | SorterResult<RecordType>[], // 排序\n  extra: TableCurrentDataSource<RecordType> // 扩展数据\n) => Promise<{ data: RecordType[]; total?: number }>;\n",paraId:20,tocIndex:14},{value:"列描述数据对象，在原来 antd Table ",paraId:21,tocIndex:15},{value:"Column",paraId:21,tocIndex:15},{value:" 的基础上扩展了以下配置：",paraId:21,tocIndex:15},{value:"参数",paraId:22,tocIndex:15},{value:"说明",paraId:22,tocIndex:15},{value:"类型",paraId:22,tocIndex:15},{value:"默认值",paraId:22,tocIndex:15},{value:"tooltip",paraId:22,tocIndex:15},{value:"表头标题后面的补充提示",paraId:22,tocIndex:15},{value:"ReactNode | (TooltipProps & { icon: ReactNode })",paraId:22,tocIndex:15},{value:"-",paraId:22,tocIndex:15},{value:"valueType",paraId:22,tocIndex:15},{value:"值类型。同 BizField 的 valueType，用于列展示 或 查询表单项 或 可编辑表格项。",paraId:22,tocIndex:15},{value:"ValueType",paraId:23,tocIndex:15},{value:"-",paraId:22,tocIndex:15},{value:"valueEnum",paraId:22,tocIndex:15},{value:"数据字典。",paraId:22,tocIndex:15},{value:"当 ",paraId:22,tocIndex:15},{value:"valueType",paraId:22,tocIndex:15},{value:" 为 ",paraId:22,tocIndex:15},{value:"enum",paraId:22,tocIndex:15},{value:" ",paraId:22,tocIndex:15},{value:"enumTag",paraId:22,tocIndex:15},{value:" ",paraId:22,tocIndex:15},{value:"enumBadge",paraId:22,tocIndex:15},{value:" 时生效。",paraId:22,tocIndex:15},{value:"EnumData",paraId:22,tocIndex:15},{value:"-",paraId:22,tocIndex:15},{value:"field",paraId:22,tocIndex:15},{value:"展示字段的配置。同 BizField 的配置项，支持 object 和 function 方式。",paraId:22,tocIndex:15},{value:"function 方式默认参数和 render 一样，需返回 BizField 的配置。",paraId:22,tocIndex:15},{value:"object | (text: any, record: RecordType, index: number) => object",paraId:22,tocIndex:15},{value:"-",paraId:22,tocIndex:15},{value:"search",paraId:22,tocIndex:15},{value:"配置查询表单项",paraId:22,tocIndex:15},{value:"SearchProps",paraId:22,tocIndex:15},{value:"-",paraId:22,tocIndex:15},{value:"table",paraId:22,tocIndex:15},{value:"是否在表格中显示，适用于部分字段只有查询表单，但表格中不显示",paraId:22,tocIndex:15},{value:"boolean",paraId:22,tocIndex:15},{value:"true",paraId:22,tocIndex:15},{value:"valueType",paraId:24,tocIndex:15},{value:" 用于字段展示时，如果没有 ",paraId:24,tocIndex:15},{value:"render",paraId:24,tocIndex:15},{value:"，将使用 ",paraId:24,tocIndex:15},{value:"BizField",paraId:25,tocIndex:15},{value:" 渲染。",paraId:24,tocIndex:15},{value:"valueType",paraId:24,tocIndex:15},{value:" 用于查询表单项 或 可编辑表格项时，转换为下表中的 ",paraId:24,tocIndex:15},{value:"itemType",paraId:24,tocIndex:15},{value:" 。",paraId:24,tocIndex:15},{value:"valueType valueEnum 为以下几个配置共用字段，可以复写：",paraId:26,tocIndex:15},{value:"field - 展示字段的配置",paraId:27,tocIndex:15},{value:"search - 查询表单项的配置",paraId:27,tocIndex:15},{value:"editable - 可编辑表格项配置（",paraId:27,tocIndex:15},{value:"EditableBizTable",paraId:28,tocIndex:15},{value:" 组件）",paraId:27,tocIndex:15},{value:"interface SearchProps<RecordType = any>\n  extends Partial<Pick<TableColumnType<RecordType>, 'dataIndex' | 'title'>>,\n    Partial<BizFormItemProps>,\n    Record<string | number, any> {\n  valueType?: BizFieldValueType;\n  valueEnum?: EnumData;\n  itemType?: keyof typeof ItemTypes;\n  order?: number; // 定义查询表单项的排列顺序，越小越靠前。参照flex的order，默认都为0\n  render?: (\n    originItem: InternalColumnType<RecordType>,\n    dom: React.ReactElement,\n    form: FormInstance\n  ) => React.ReactElement;\n}\n",paraId:29,tocIndex:16},{value:"当值为 ",paraId:30,tocIndex:16},{value:"true",paraId:30,tocIndex:16},{value:" 或 ",paraId:30,tocIndex:16},{value:"object",paraId:30,tocIndex:16},{value:" 时，自动添加查询表单项。除了以下映射值的配置，其余项皆透传给表单项。",paraId:30,tocIndex:16},{value:"columns",paraId:31,tocIndex:16},{value:" 部分配置跟查询表单项配置的映射：",paraId:31,tocIndex:16},{value:"dataIndex = name\ntitle = label\nvalueType = itemType\nvalueEnum = options\n",paraId:32,tocIndex:16},{value:"valueType",paraId:33,tocIndex:16},{value:"itemType",paraId:33,tocIndex:16},{value:"BizFormItem 表单项",paraId:33,tocIndex:16},{value:"text",paraId:33,tocIndex:16},{value:"input",paraId:33,tocIndex:16},{value:"BizFormItemInput",paraId:34,tocIndex:16},{value:"money",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"progress",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"percent",paraId:33,tocIndex:16},{value:"number",paraId:33,tocIndex:16},{value:"BizFormItemNumber",paraId:35,tocIndex:16},{value:"color",paraId:33,tocIndex:16},{value:"color",paraId:33,tocIndex:16},{value:"BizFormItemColor",paraId:36,tocIndex:16},{value:"enum",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"enumTag",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"enumBadge",paraId:33,tocIndex:16},{value:"select",paraId:33,tocIndex:16},{value:"BizFormItemSelect",paraId:37,tocIndex:16},{value:"date",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"formNow",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"dateWeek",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"dateMonth",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"dateQuarter",paraId:33,tocIndex:16},{value:" ",paraId:33,tocIndex:16},{value:"dateYear",paraId:33,tocIndex:16},{value:"date",paraId:33,tocIndex:16},{value:"BizFormItemDate",paraId:38,tocIndex:16},{value:"dateRange",paraId:33,tocIndex:16},{value:"dateRange",paraId:33,tocIndex:16},{value:"BizFormItemDateRange",paraId:39,tocIndex:16},{value:"time",paraId:33,tocIndex:16},{value:"time",paraId:33,tocIndex:16},{value:"BizFormItemTime",paraId:40,tocIndex:16},{value:"timeRange",paraId:33,tocIndex:16},{value:"timeRange",paraId:33,tocIndex:16},{value:"BizFormItemTimeRange",paraId:41,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"address",paraId:33,tocIndex:16},{value:"BizFormItemAddress",paraId:42,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"autoComplete",paraId:33,tocIndex:16},{value:"BizFormItemAutoComplete",paraId:43,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"captcha",paraId:33,tocIndex:16},{value:"BizFormItemCaptcha",paraId:44,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"cascader",paraId:33,tocIndex:16},{value:"BizFormItemCascader",paraId:45,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"checkbox",paraId:33,tocIndex:16},{value:"BizFormItemCheckbox",paraId:46,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"textarea",paraId:33,tocIndex:16},{value:"BizFormItemTextArea",paraId:47,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"password",paraId:33,tocIndex:16},{value:"BizFormItemPassword",paraId:48,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"radio",paraId:33,tocIndex:16},{value:"BizFormItemRadio",paraId:49,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"upload",paraId:33,tocIndex:16},{value:"BizFormItemUpload",paraId:50,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"slider",paraId:33,tocIndex:16},{value:"BizFormItemSlider",paraId:51,tocIndex:16},{value:"-",paraId:33,tocIndex:16},{value:"switch",paraId:33,tocIndex:16},{value:"BizFormItemSwitch",paraId:52,tocIndex:16},{value:"以下几种配置结果都是一样的:",paraId:53,tocIndex:16},{value:'{\n  dataIndex: "createTime",\n  title: "创建时间",\n  valueType: "dateTime", // valueType 为日期时，内部自动处理格式\n  search: true\n},\n{\n  dataIndex: "createTime",\n  title: "创建时间",\n  search: {\n    valueType: "dateTime"\n  }\n},\n{\n  dataIndex: "createTime",\n  title: "创建时间",\n  search: {\n    itemType: "date", // 注意区分 valueType 和 itemType，valueType 只是用于映射 itemType，最终还是使用 itemType，而 itemType 没有 dateTime\n    showTime: true,\n    format: "YYYY-MM-DD HH:mm:ss"\n  }\n},\n',paraId:54,tocIndex:16},{value:"如果 ",paraId:55,tocIndex:16},{value:"valueType",paraId:55,tocIndex:16},{value:" 没有匹配的 ",paraId:55,tocIndex:16},{value:"itemType",paraId:55,tocIndex:16},{value:" 或没有设置 ",paraId:55,tocIndex:16},{value:"itemType",paraId:55,tocIndex:16},{value:"，默认 ",paraId:55,tocIndex:16},{value:"itemType='input'",paraId:55,tocIndex:16},{value:" 。",paraId:55,tocIndex:16},{value:"再如果以上都不符合要求，可以自定义表单项渲染 ",paraId:56,tocIndex:16},{value:"search.render",paraId:56,tocIndex:16},{value:" 。",paraId:56,tocIndex:16},{value:"search: {\n  render: (originItem, dom: ReactElement, form: FormInstance): ReactElement{\n    console.log(originItem, dom, form);\n    // return dom;\n\n    const { dataIndex, title } = originItem;\n    return (\n      <BizFormItem name={dataIndex} label={title}>\n        {/* some form, example Rate Slider Switch ... */}\n        <AutoComplete />\n      </BizFormItem>\n    )\n  }\n}\n",paraId:57,tocIndex:16},{value:"此外，你还可以通过 ",paraId:58,tocIndex:16},{value:"order",paraId:58,tocIndex:16},{value:" 来设置查询表单项排序，数值越小越靠前。",paraId:58,tocIndex:16},{value:"search: {\n  order: 1;\n}\n",paraId:59,tocIndex:16},{value:"用 ",paraId:60,tocIndex:17},{value:"actionRef",paraId:60,tocIndex:17},{value:" 可手动触发 ",paraId:60,tocIndex:17},{value:"reload",paraId:60,tocIndex:17},{value:" ",paraId:60,tocIndex:17},{value:"reset",paraId:60,tocIndex:17},{value:" ",paraId:60,tocIndex:17},{value:"submit",paraId:60,tocIndex:17},{value:" 操作。",paraId:60,tocIndex:17},{value:"type ActionType = {\n  reload: () => void;\n  reset: () => void;\n  submit: () => void;\n};\n\nconst ref = useRef<ActionType>();\n\n<BizTable actionRef={ref} />;\n\n// 刷新，使用原来的查询表单值、筛选、排序、分页参数重新发起请求\nref.current.reload();\n\n// 重置查询表单并触发请求，分页会重置到第一页，筛选、排序不变\nref.current.reset();\n\n// 触发查询表单提交，分页会重置到第一页，筛选、排序不变\nref.current.submit();\n",paraId:61,tocIndex:17},{value:"参考: ",paraId:62,tocIndex:19},{value:"proTable 在全屏下的 modal 不会展示",paraId:62,tocIndex:19},{value:"可查看具体示例：",paraId:63,tocIndex:19},{value:"修改和新增共用表单",paraId:64,tocIndex:19},{value:"<ConfigProvider getPopupContainer={() => document.querySelector('.antd-more-table')}>\n  // modal\n</ConfigProvider>\n",paraId:65,tocIndex:19}]},61092:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    valueType: 'indexBorder'\n  },\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字',\n    search: true\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    valueType: 'dateTime',\n    search: {\n      valueType: 'date',\n      order: 1\n    }\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    tooltip: '提示文字',\n    sorter: true,\n    valueType: 'dateTime',\n    search: {\n      valueType: 'dateTimeRange',\n      names: ['startTime', 'endTime'],\n      colProps: { lg: 12, md: 24 },\n      order: 2\n    }\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员',\n    search: true\n  }\n];\n\nconst Demo = () => {\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  return <BizTable request={request} columns={columns} rowKey=\"applyCode\" toolbarAction />;\n};\n\nexport default Demo;\n"},62978:function(e,n){n.Z="import * as React from 'react';\nimport { divide } from 'util-helpers';\nimport type { FormInstance } from 'antd';\nimport { Button, Card, Space, message } from 'antd';\nimport type { BizTableActionType, BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\nimport { ApproveStatusOptions } from './constants';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    search: true,\n    table: false\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    search: {\n      valueType: 'date'\n    }\n  },\n  {\n    dataIndex: 'money',\n    title: '金额',\n    valueType: 'money',\n    align: 'right',\n    // 写法一，传递给 BizField的参数\n    field: {\n      formatValue: (value) => divide(value, 100), // 分转元\n      prefix: '¥'\n    }\n    // 写法二，可关联当前数据配置\n    // field: (text, record, index) => {\n    //   console.log(text, record, index);\n    //   return {\n    //     formatValue: value => divide(value, 100), // 分转元\n    //     prefix: `${record.applicantName} `,\n    //   }\n    // }\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    sorter: true,\n    valueType: 'dateTime',\n    search: {\n      valueType: 'dateTimeRange',\n      names: ['startTime', 'endTime'],\n      colProps: { lg: 12, md: 24 },\n      order: 1\n    }\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员'\n  },\n  {\n    dataIndex: 'approveResult',\n    title: '审核状态',\n    filters: ApproveStatusOptions.map((item) => ({ text: item.label, ...item })),\n    valueType: 'enumBadge',\n    valueEnum: ApproveStatusOptions,\n    search: {\n      name: 'approveStatus',\n      all: true,\n      initialValue: ''\n    }\n  }\n];\n\nconst Demo = () => {\n  const formRef = React.useRef<FormInstance>();\n  const actionRef = React.useRef<BizTableActionType>();\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  const currentColumns = React.useMemo(\n    () => [\n      ...columns,\n      {\n        title: '操作',\n        render: () => (\n          <Space size=\"middle\">\n            <a\n              onClick={() => {\n                actionRef.current?.reload();\n              }}\n            >\n              reload\n            </a>\n            <a\n              onClick={() => {\n                actionRef.current?.submit();\n              }}\n            >\n              submit\n            </a>\n            <a\n              onClick={() => {\n                actionRef.current?.reset();\n              }}\n            >\n              reset\n            </a>\n          </Space>\n        )\n      }\n    ],\n    []\n  );\n\n  return (\n    <BizTable\n      request={request}\n      columns={currentColumns}\n      rowKey=\"applyCode\"\n      pagination={{\n        pageSize: 5\n      }}\n      formRef={formRef}\n      actionRef={actionRef}\n      form={{\n        submitter: {\n          render: (_, submitterDom) => {\n            return (\n              <Space>\n                {submitterDom}\n                <Button key=\"export\" onClick={() => message.success('点击导出按钮')}>\n                  导出\n                </Button>\n              </Space>\n            );\n          }\n        },\n        defaultColsNumber: 1\n      }}\n      toolbar={\n        <Space>\n          <Button type=\"primary\" onClick={() => message.success('点击新增按钮')}>\n            新增\n          </Button>\n          <Button\n            onClick={() => {\n              formRef.current.setFieldsValue({ applyCode: '12345' });\n            }}\n          >\n            赋值\n          </Button>\n        </Space>\n      }\n      toolbarAction\n      fullScreenBackgroundColor=\"rgba(0,0,0,0.1)\"\n      extra={<Card bordered={false}>Extra Block!</Card>}\n    />\n  );\n};\n\nexport default Demo;\n"},51086:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号'\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间'\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    sorter: true\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员'\n  }\n];\n\nconst Demo = () => {\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  return (\n    <BizTable\n      request={request}\n      columns={columns}\n      rowKey=\"applyCode\"\n      pagination={{\n        pageSize: 5\n      }}\n      compact\n    />\n  );\n};\n\nexport default Demo;\n"},10379:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { getPC } from 'lcn';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\nimport { ApproveStatusOptions } from './constants';\n\nconst pcOptions = getPC({\n  inland: true,\n  fieldNames: { code: 'value', name: 'label' }\n});\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字',\n    search: true // 无 valueType，默认为 ItemInput\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    search: {\n      itemType: 'date' // 日期\n    }\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'dateTimeRange',\n    title: '日期时间区间',\n    tooltip: '提示文字',\n    sorter: true,\n    search: {\n      valueType: 'dateTimeRange', // 日期范围，当valueType不满足时，使用 itemType 指定 formItem 类型\n      names: ['startTime', 'endTime'],\n      initialValue: ['2020-10-10 00:00:00', '2020-11-11 11:11:11'],\n      colProps: { lg: 12, md: 24 },\n      order: 9\n    },\n    table: false\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员',\n    search: true,\n    table: false\n  },\n  {\n    dataIndex: 'money',\n    valueType: 'money', // progress percent 一样\n    title: '数字',\n    search: true,\n    table: false\n  },\n  {\n    dataIndex: 'color',\n    valueType: 'color',\n    title: '颜色',\n    search: true,\n    table: false\n  },\n  {\n    dataIndex: 'select',\n    valueType: 'enum', // enumTag enumBadge 一样\n    valueEnum: ApproveStatusOptions,\n    title: '选择器',\n    search: {\n      all: true,\n      initialValue: ''\n    },\n    table: false\n  },\n  {\n    dataIndex: 'radio',\n    valueType: 'enum',\n    valueEnum: ApproveStatusOptions,\n    title: '单选框',\n    search: {\n      itemType: 'radio',\n      all: true,\n      initialValue: '',\n      colProps: { lg: 24, md: 24 }\n    },\n    table: false\n  },\n  {\n    dataIndex: 'checkbox',\n    valueType: 'enum',\n    valueEnum: ApproveStatusOptions,\n    title: '多选框',\n    search: {\n      itemType: 'checkbox',\n      all: true,\n      colProps: { lg: 24, md: 24 }\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateWeek',\n    valueType: 'dateWeek',\n    title: '周',\n    search: {\n      order: 1\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateMonth',\n    valueType: 'dateMonth',\n    title: '月',\n    search: {\n      order: 2\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateQuarter',\n    valueType: 'dateQuarter',\n    title: '季',\n    search: {\n      order: 3\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateYear',\n    valueType: 'dateYear',\n    title: '年',\n    search: {\n      order: 4\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateTime',\n    valueType: 'dateTime',\n    title: '日期时间',\n    search: {\n      order: 5\n    },\n    table: false\n  },\n  {\n    dataIndex: 'time',\n    valueType: 'time',\n    title: '时间',\n    search: {\n      order: 6\n    },\n    table: false\n  },\n  {\n    dataIndex: 'dateRange',\n    valueType: 'dateRange',\n    title: '日期区间',\n    search: {\n      colProps: { lg: 12, md: 24 },\n      order: 7\n    },\n    table: false\n  },\n  {\n    dataIndex: 'timeRange',\n    valueType: 'timeRange',\n    title: '时间区间',\n    search: {\n      colProps: { lg: 12, md: 24 },\n      order: 8\n    },\n    table: false\n  },\n  {\n    dataIndex: 'slider',\n    title: '自定义滑动条',\n    search: {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      // render: ({ dataIndex, title }, dom, form) => (\n      //   <BizFormItem name={dataIndex} label={title as string} colProps={{ lg: 12, md: 24 }}>\n      //     <Slider />\n      //   </BizFormItem>\n      // ),\n      itemType: 'slider',\n      order: 10\n    },\n    table: false\n  },\n  {\n    dataIndex: 'cascader',\n    title: '省市',\n    search: {\n      itemType: 'cascader',\n      options: pcOptions,\n      colProps: { lg: 12, md: 24 },\n      order: 11\n    },\n    table: false\n  }\n];\n\nconst Demo = () => {\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  return (\n    <BizTable\n      request={request}\n      columns={columns}\n      rowKey=\"applyCode\"\n      pagination={{\n        pageSize: 5\n      }}\n      form={{\n        labelWidth: 112\n      }}\n    />\n  );\n};\n\nexport default Demo;\n"},28243:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { sleep } from 'ut2';\nimport { getApplyList } from './service';\nimport { ApproveStatus, ApproveStatusOptions } from './constants';\n\nasync function getAsyncInitialValues() {\n  await sleep(5000);\n  return {\n    applyCode: '123456',\n    createTime: '2020-10-10',\n    approveResult: ApproveStatus.Processing\n  };\n}\n\nconst columns: BizTableColumnType = [\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    search: true\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    sorter: true,\n    search: {\n      valueType: 'date'\n    }\n  },\n  {\n    dataIndex: 'approveResult',\n    title: '审核状态',\n    filters: ApproveStatusOptions.map((item) => ({ text: item.label, ...item })),\n    valueType: 'enumBadge',\n    valueEnum: ApproveStatusOptions,\n    search: {\n      all: true\n    }\n  }\n];\n\nconst Demo = () => {\n  const [ready, setReady] = React.useState(false);\n  const [initialValues, setInitialValues] = React.useState<any>();\n  const request: BizTableRequest = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  React.useEffect(() => {\n    // 异步获取表单初始值\n    getAsyncInitialValues().then((res) => {\n      setInitialValues(res);\n      setReady(true);\n    });\n  }, []);\n\n  return (\n    <BizTable\n      request={request}\n      columns={columns}\n      rowKey=\"applyCode\"\n      ready={ready}\n      form={{\n        initialValues\n      }}\n    />\n  );\n};\n\nexport default Demo;\n"},25093:function(e,n){n.Z=".wrapper {\n  :global {\n    label {\n      white-space: nowrap;\n    }\n  }\n}\n\n.inputWrapper {\n  display: inline-flex;\n  align-items: center;\n  margin: -5px 0 -5px 8px;\n  color: gray;\n\n  :global {\n    .ant-input-number {\n      margin: 0 8px;\n    }\n  }\n}\n"},56344:function(e,n){n.Z="import * as React from 'react';\nimport type { RadioGroupProps } from 'antd';\nimport { Radio, InputNumber } from 'antd';\nimport classnames from 'classnames';\nimport styles from './index.module.less';\n\n// 配送规则\n// 0--不包邮 1--包邮 2-不配送\nexport enum FreightRuleType {\n  Need = '0',\n  No = '1',\n  NoExpress = '2'\n}\n\n// 配送规则选项\nexport const FreightRuleOptions = [\n  {\n    label: '包邮',\n    value: FreightRuleType.No\n  },\n  {\n    label: '不包邮',\n    value: FreightRuleType.Need\n  },\n  {\n    label: '不配送',\n    value: FreightRuleType.NoExpress\n  }\n];\n\nexport type FreightItem = {\n  id: number | string;\n  freight: number;\n  freightRule: FreightRuleType;\n};\n\nexport interface FreightProps\n  extends Omit<RadioGroupProps, 'id' | 'value' | 'onChange'>,\n    FreightItem {\n  onChange?: (value: FreightItem) => void;\n}\n\nconst Freight: React.FC<FreightProps> = ({\n  id,\n  freight,\n  freightRule,\n  onChange,\n  className,\n  ...restProps\n}) => {\n  const inputRef = React.useRef<HTMLInputElement>(null);\n  const [freightValue, setFreightValue] = React.useState<number>(freight);\n\n  const handleChangeRadio = React.useCallback(\n    (e) => {\n      const val = e.target.value;\n      const realFreight = val !== FreightRuleType.Need ? 0 : freightValue;\n      setFreightValue(realFreight);\n\n      onChange?.({\n        id,\n        freightRule: val,\n        freight: realFreight\n      });\n\n      if (val === FreightRuleType.Need && inputRef) {\n        setTimeout(() => {\n          inputRef.current?.focus();\n        }, 0);\n      }\n    },\n    [freightValue, id, onChange]\n  );\n\n  const handleChangeFreight = React.useCallback(\n    (val) => {\n      setFreightValue(val);\n      onChange?.({\n        id,\n        freightRule,\n        freight: val\n      });\n    },\n    [freightRule, id, onChange]\n  );\n\n  return (\n    <Radio.Group\n      className={classnames(styles.wrapper, className)}\n      onChange={handleChangeRadio}\n      value={freightRule}\n      {...restProps}\n    >\n      {FreightRuleOptions.map((item) => {\n        const freightInputName = 'id' + id + (item.value + '');\n        return (\n          <Radio key={item.value} value={item.value}>\n            {item.label}\n            {item.value === FreightRuleType.Need && freightRule === FreightRuleType.Need && (\n              <div\n                className={styles.inputWrapper}\n                style={freightRule !== FreightRuleType.Need ? { display: 'none' } : {}}\n              >\n                <label htmlFor={freightInputName}>运费</label>\n                <InputNumber<number>\n                  name={freightInputName}\n                  id={freightInputName}\n                  value={freightValue}\n                  precision={2}\n                  min={0}\n                  max={999}\n                  onChange={handleChangeFreight}\n                  ref={inputRef}\n                />\n                元\n              </div>\n            )}\n          </Radio>\n        );\n      })}\n    </Radio.Group>\n  );\n};\n\nexport default Freight;\n"},47882:function(e,n){n.Z="// 审核状态\n// 1-待审核 2-审核通过 3-审核拒绝\nexport enum ApproveStatus {\n  Processing = '1',\n  Approve = '2',\n  Refused = '3'\n}\n\n// 审核状态选项\nexport const ApproveStatusOptions = [\n  {\n    label: '待审核',\n    value: ApproveStatus.Processing,\n    badge: {\n      status: 'processing'\n    }\n  },\n  {\n    label: '审核通过',\n    value: ApproveStatus.Approve,\n    badge: {\n      status: 'success'\n    }\n  },\n  {\n    label: '审核拒绝',\n    value: ApproveStatus.Refused,\n    badge: {\n      status: 'error'\n    }\n  }\n];\n\n// 银行\nexport enum Bank {\n  BOC = 'BOC',\n  BCM = 'BCM',\n  ABC = 'ABC'\n}\n\n// 银行选项\nexport const BankOptions = [\n  {\n    label: '中国银行',\n    value: Bank.BOC\n  },\n  {\n    label: '交通银行',\n    value: Bank.BCM\n  },\n  {\n    label: '中国农业银行',\n    value: Bank.ABC\n  }\n];\n"},98600:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { renderMoney, renderStatusWithRemark } from './utils/field';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\nimport { ApproveStatus, ApproveStatusOptions } from './constants';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    valueType: 'indexBorder'\n  },\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字'\n  },\n  {\n    dataIndex: 'money',\n    title: '金额',\n    align: 'right',\n    render: renderMoney\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    field: {\n      valueType: 'text',\n      whitespaceLineBreak: true\n    },\n    search: {\n      valueType: 'date',\n      order: 1\n    }\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员',\n    search: true\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    tooltip: '提示文字',\n    sorter: true,\n    valueType: 'dateTime',\n    field: {\n      valueType: 'text',\n      whitespaceLineBreak: true\n    }\n  },\n  {\n    dataIndex: 'approveResult',\n    title: '审核状态',\n    render: (text, record) => {\n      return renderStatusWithRemark(\n        text,\n        ApproveStatusOptions,\n        text === ApproveStatus.Refused && record.remark ? record.remark : ''\n      );\n    }\n  }\n];\n\nconst Demo = () => {\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  return (\n    <BizTable request={request} columns={columns} rowKey=\"applyCode\" pagination={{ pageSize: 5 }} />\n  );\n};\n\nexport default Demo;\n"},41651:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType } from 'antd-more';\nimport { BizFormItemInput, BizFormItemDate, BizFormItemDateRange, BizTable } from 'antd-more';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字'\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间'\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    tooltip: '提示文字',\n    sorter: true\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员'\n  }\n];\n\nconst Demo = () => {\n  const formItems = [\n    <BizFormItemInput key=\"applyCode\" name=\"applyCode\" label=\"申请编号\" />,\n    <BizFormItemDate key=\"createTime\" name=\"createTime\" label=\"提交时间\" />,\n    <BizFormItemInput key=\"approveName\" name=\"approverName\" label=\"审核员\" />,\n    <BizFormItemDateRange\n      key=\"approveTime\"\n      name=\"approveTime\"\n      names={['startTime', 'endTime']}\n      showTime\n      label=\"审核时间\"\n      colProps={{ lg: 12, md: 24 }}\n    />\n  ];\n\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  return <BizTable request={request} columns={columns} rowKey=\"applyCode\" formItems={formItems} />;\n};\n\nexport default Demo;\n"},70048:function(e,n){n.Z="import * as React from 'react';\nimport { Button, message } from 'antd';\nimport type { BizTableColumnType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { useAsync } from 'rc-hooks';\nimport Mockjs from 'mockjs';\nimport { sleep } from 'ut2';\nimport FreightRule, { FreightRuleType } from './components/FreightRule';\n\ntype DataItem = {\n  freight: number;\n  freightRule: string;\n  id: number;\n  name: string;\n};\n\nconst services = {\n  async getData() {\n    await sleep();\n    const { data } = Mockjs.mock({\n      'data|3-5': [\n        {\n          freight: '@float(0.01,999,0,2)',\n          'freightRule|1': ['0', '1', '2'],\n          'id|+1': 0,\n          name: '@city'\n        }\n      ]\n    }) as {\n      data: {\n        freight: number;\n        freightRule: string;\n        id: number;\n        name: string;\n      }[];\n    };\n    return {\n      success: true,\n      data: data.map((item) => {\n        if (item.freightRule !== FreightRuleType.Need) {\n          return {\n            ...item,\n            freight: 0\n          };\n        }\n        return item;\n      })\n    };\n  },\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  async update(data) {\n    await sleep();\n    return {\n      success: true\n    };\n  }\n};\n\nfunction reducer(state, action) {\n  const { type, ...rest } = action;\n\n  switch (type) {\n    case 'update':\n      if (state.find((item) => item.id === action.id)) {\n        return state.map((item) => {\n          if (item.id === action.id) {\n            return {\n              ...item,\n              ...rest\n            };\n          }\n          return item;\n        });\n      }\n      return [...state, rest];\n    case 'clear':\n      return [];\n    default:\n      return state;\n  }\n}\n\nconst Freight = () => {\n  const [state, dispatch] = React.useReducer(reducer, []);\n\n  const columns: BizTableColumnType<DataItem> = [\n    {\n      valueType: 'indexBorder'\n    },\n    {\n      title: '地区',\n      dataIndex: 'name',\n      width: 170\n    },\n    {\n      title: '规则',\n      dataIndex: 'freightRule',\n      render: (_, record) => {\n        const currentState = state.find((item) => item.id === record.id);\n        return (\n          <FreightRule\n            {...record}\n            {...currentState}\n            onChange={(values) => {\n              dispatch({\n                type: 'update',\n                ...values\n              });\n            }}\n          />\n        );\n      }\n    }\n  ];\n\n  const {\n    data = [],\n    refresh: refreshData,\n    loading\n  } = useAsync(() => services.getData().then((res) => res.data));\n  const { run: update, loading: updating } = useAsync(() => services.update(state), {\n    autoRun: false\n  });\n\n  const handleUpdate = () => {\n    if (!state || state.length === 0) {\n      message.info('没有修改项');\n      return;\n    }\n    if (state.find((item) => item.freightRule === FreightRuleType.Need && item.freight === 0)) {\n      message.error('运费不能为0');\n      return;\n    }\n    update().then(() => {\n      dispatch({ type: 'clear' });\n      refreshData();\n    });\n  };\n\n  return (\n    <BizTable\n      autoRequest={false}\n      dataSource={data}\n      columns={columns}\n      pagination={false}\n      rowKey=\"id\"\n      loading={loading || updating}\n      toolbar={\n        <Button type=\"primary\" onClick={handleUpdate} disabled={loading} loading={updating}>\n          更新\n        </Button>\n      }\n      toolbarAction={{\n        // fullScreen: true,\n        // density: true,\n        reload: false // 没有请求\n        // columnSetting: true,\n      }}\n    />\n  );\n};\n\nexport default Freight;\n"},20073:function(e,n){n.Z="import * as React from 'react';\nimport type { BizTableRequest, BizTableColumnType, BizTableActionType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\nimport { Space, Switch } from 'antd';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    valueType: 'indexBorder'\n  },\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字',\n    search: true\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    valueType: 'dateTime',\n    search: {\n      valueType: 'date',\n      order: 1\n    }\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    tooltip: '提示文字',\n    sorter: true,\n    valueType: 'dateTime',\n    search: {\n      valueType: 'dateTimeRange',\n      names: ['startTime', 'endTime'],\n      colProps: { lg: 12, md: 24 },\n      order: 2\n    }\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员',\n    search: true\n  }\n];\n\nconst Demo = () => {\n  const [polling, setPolling] = React.useState(false);\n  const actionRef = React.useRef<BizTableActionType>();\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  const handleChangePolling = (val: boolean) => {\n    setPolling(val);\n\n    if (val) {\n      // 此处使用延时，是因为 pollingInterval 依赖 polling 配置，所以要等 setState 更新后再触发请求。\n      setTimeout(() => {\n        // 开启后需要触发一次请求才生效\n        actionRef.current?.reload();\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Space style={{ marginBottom: 16 }}>\n        自动轮询\n        <Switch\n          checkedChildren=\"开启\"\n          unCheckedChildren=\"关闭\"\n          checked={polling}\n          onChange={handleChangePolling}\n        />\n      </Space>\n\n      <BizTable\n        request={request}\n        columns={columns}\n        rowKey=\"applyCode\"\n        toolbarAction\n        actionRef={actionRef}\n        asyncOptions={{\n          pollingInterval: polling ? 3000 : undefined\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Demo;\n"},49855:function(e,n){n.Z="import * as React from 'react';\nimport type { FormInstance } from 'antd';\nimport type { BizTableRequest, BizTableColumnType, BizTableActionType } from 'antd-more';\nimport { BizTable } from 'antd-more';\nimport { divide } from 'util-helpers';\nimport { getApplyList } from './service';\nimport type { DataItem } from './service';\n\nconst columns: BizTableColumnType<DataItem> = [\n  {\n    valueType: 'indexBorder'\n  },\n  {\n    dataIndex: 'applyCode',\n    title: '申请编号',\n    tooltip: '提示文字',\n    search: true\n  },\n  {\n    dataIndex: 'money',\n    title: '金额',\n    valueType: 'money',\n    align: 'right',\n    // 传递给 BizField的参数\n    field: {\n      formatValue: (value) => divide(value, 100), // 分转元\n      prefix: '¥'\n    }\n  },\n  {\n    dataIndex: 'createTime',\n    title: '提交时间',\n    valueType: 'dateTime',\n    search: {\n      valueType: 'date',\n      order: 1\n    }\n  },\n  {\n    dataIndex: 'applicantName',\n    title: '经办员'\n  },\n  {\n    dataIndex: 'approveTime',\n    title: '审核时间',\n    tooltip: '提示文字',\n    sorter: true,\n    valueType: 'dateTime',\n    search: {\n      valueType: 'dateTimeRange',\n      names: ['startTime', 'endTime'],\n      colProps: { lg: 12, md: 24 },\n      order: 2\n    }\n  },\n  {\n    dataIndex: 'approverName',\n    title: '审核员',\n    search: true\n  }\n];\n\nconst Demo = () => {\n  // 查询表单实例引用\n  const formRef = React.useRef<FormInstance>();\n  // 操作引用\n  const actionRef = React.useRef<BizTableActionType>();\n\n  const request: BizTableRequest<DataItem> = (params, filters, sorter, extra) => {\n    const { pageSize, current, ...restParams } = params;\n    console.log(params, filters, sorter, extra);\n    return getApplyList({\n      page: {\n        pageSize,\n        pageNum: current\n      },\n      data: restParams\n    }).then((res) => {\n      return {\n        total: res.pageInfo.total,\n        data: res.data\n      };\n    });\n  };\n\n  React.useEffect(() => {\n    // 设置查询表单值\n    formRef.current.setFieldsValue({\n      approverName: '123',\n      createTime: '2021-10-28',\n      approveTime: ['2021-10-28 00:00:00', '2021-10-28 23:59:59']\n    });\n\n    // 手动发起请求\n    actionRef.current.submit();\n  }, []);\n\n  return (\n    <BizTable\n      request={request}\n      columns={columns}\n      rowKey=\"applyCode\"\n      pagination={{ pageSize: 5 }}\n      toolbarAction\n      // 关闭自动请求\n      autoRequest={false}\n      formRef={formRef}\n      actionRef={actionRef}\n    />\n  );\n};\n\nexport default Demo;\n"},96627:function(e,n){n.Z="import Mock from 'mockjs';\nimport { sleep } from 'ut2';\nimport type { ApproveStatus } from './constants';\n\nexport type DataItem = {\n  applyCode: string;\n  applicantName: string;\n  approverName: string;\n  createTime: string;\n  approveTime: string;\n  approveResult: ApproveStatus;\n  money: number;\n  remark: string;\n};\n\ntype ApplyListResponse = {\n  data: DataItem[];\n  pageInfo: {\n    total: number;\n    pages: number;\n  };\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst applyList = ({ page: { pageNum, pageSize }, data = {} }) =>\n  Mock.mock({\n    [`data|${pageSize}`]: [\n      {\n        applyCode: '@word(6)',\n        applicantName: '@cname',\n        approverName: '@cname',\n        createTime: '@datetime',\n        approveTime: '@datetime',\n        'approveResult|1': ['1', '2', '3'],\n        'money|0-10000.0-2': 0,\n        remark: '@cword(10,20)'\n      }\n    ],\n    pageInfo: {\n      total: 50,\n      pages: 10\n    }\n  }) as ApplyListResponse;\n\nexport async function getApplyList(params) {\n  await sleep();\n  return applyList(params);\n}\n"},37478:function(e,n){n.Z="import * as React from 'react';\nimport { divide, formatMoney, setDataURLPrefix } from 'util-helpers';\nimport type { EnumData } from 'antd-more';\nimport { BizField } from 'antd-more';\nimport { Typography } from 'antd';\n\n// 超长省略展示\n// 超过10个字，只展示前3后2\nexport const renderLongOmitted = (str?: string) => {\n  if (str && str.length > 10) {\n    const before = str.substring(0, 3);\n    const after = str.substring(str.length - 2);\n    return `${before}...${after}`;\n  }\n  return str;\n};\n\n// 格式化单位为分的金额\n// 如果有特殊需求，比如前后加其他字段，可以使用 BizTable 的第二个参数 record\nexport const renderMoney = (num?: number | string) => {\n  if ((typeof num === 'number' && !isNaN(num)) || (num && typeof num === 'string')) {\n    return `¥${formatMoney(divide(num, 100))}`;\n  }\n  return '-';\n};\n\n// 转换base64图片buffer\nexport const renderBase64Buffer = (buffer?: string) => {\n  if (buffer) {\n    const base64 = setDataURLPrefix(buffer);\n    return <BizField valueType=\"image\" value={base64} />;\n  }\n  return '-';\n};\n\n// 备注\nexport function renderRemark(text?: string) {\n  const remarkView =\n    typeof text === 'string' && text.indexOf('\\n') > -1 ? (\n      <>\n        {text.split('\\n').map((item) => (\n          <div key={item} style={{ marginBottom: 5 }}>\n            {item}\n          </div>\n        ))}\n      </>\n    ) : (\n      text\n    );\n  return (\n    <Typography.Text style={{ maxWidth: 160, color: 'gray' }} ellipsis={{ tooltip: remarkView }}>\n      {remarkView || '-'}\n    </Typography.Text>\n  );\n}\n\n// 状态和备注（错误原因）\nexport const renderStatusWithRemark = (text: string, valueEnum: EnumData = [], remark = '') => {\n  return (\n    <div>\n      <BizField value={text} valueType=\"enumBadge\" valueEnum={valueEnum} />\n      {remark && <div>{renderRemark(remark)}</div>}\n    </div>\n  );\n};\n"}}]);