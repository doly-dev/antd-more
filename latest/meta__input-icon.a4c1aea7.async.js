"use strict";(self.webpackChunkantd_more=self.webpackChunkantd_more||[]).push([[394],{38255:function(n,e,t){t.r(e),t.d(e,{demos:function(){return m}});var a,o,r,u,i=t(66373),p=t.n(i),d=t(50408),c=t.n(d),l=t(15237),m={"input-icon-demo-demo1":{component:l.memo(l.lazy((function(){return t.e(2478).then(t.bind(t,62533))}))),asset:{type:"BLOCK",id:"input-icon-demo-demo1",refAtomIds:["input-icon"],dependencies:{"index.tsx":{type:"FILE",value:t(10598).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.25"}},entry:"index.tsx"},context:{react:t(15237),"antd-more":t(9794)},renderOpts:{compile:(u=c()(p()().mark((function n(){var e,a=arguments;return p()().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(6481),t.e(7251)]).then(t.bind(t,97251));case 2:return n.abrupt("return",(e=n.sent).default.apply(e,a));case 3:case"end":return n.stop()}}),n)}))),function(){return u.apply(this,arguments)})}},"input-icon-demo-bizform-1":{component:l.memo(l.lazy((function(){return t.e(2478).then(t.bind(t,48524))}))),asset:{type:"BLOCK",id:"input-icon-demo-bizform-1",refAtomIds:["input-icon"],dependencies:{"index.tsx":{type:"FILE",value:t(84742).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.25"}},entry:"index.tsx"},context:{react:t(15237),"antd-more":t(9794)},renderOpts:{compile:(r=c()(p()().mark((function n(){var e,a=arguments;return p()().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(6481),t.e(7251)]).then(t.bind(t,97251));case 2:return n.abrupt("return",(e=n.sent).default.apply(e,a));case 3:case"end":return n.stop()}}),n)}))),function(){return r.apply(this,arguments)})}},"input-icon-demo-define-icon":{component:l.memo(l.lazy((function(){return t.e(2478).then(t.bind(t,66923))}))),asset:{type:"BLOCK",id:"input-icon-demo-define-icon",refAtomIds:["input-icon"],dependencies:{"index.tsx":{type:"FILE",value:t(64480).Z},react:{type:"NPM",value:"18.3.1"},"antd-more":{type:"NPM",value:"4.2.25"},"./icons.ts":{type:"FILE",value:t(8897).Z},"@ant-design/icons":{type:"NPM",value:"5.3.7"}},entry:"index.tsx"},context:{react:t(15237),"antd-more":t(9794),"./icons.ts":t(1379),"@ant-design/icons":t(39986)},renderOpts:{compile:(o=c()(p()().mark((function n(){var e,a=arguments;return p()().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(6481),t.e(7251)]).then(t.bind(t,97251));case 2:return n.abrupt("return",(e=n.sent).default.apply(e,a));case 3:case"end":return n.stop()}}),n)}))),function(){return o.apply(this,arguments)})}},"input-icon-demo-modal-menu":{component:l.memo(l.lazy((function(){return t.e(2478).then(t.bind(t,6159))}))),asset:{type:"BLOCK",id:"input-icon-demo-modal-menu",refAtomIds:["input-icon"],dependencies:{"index.tsx":{type:"FILE",value:t(87983).Z},react:{type:"NPM",value:"18.3.1"},antd:{type:"NPM",value:"5.17.0"},"antd-more":{type:"NPM",value:"4.2.25"},"./type.ts":{type:"FILE",value:t(43056).Z}},entry:"index.tsx"},context:{react:t(15237),antd:t(6914),"antd-more":t(9794),"./type.ts":t(7494)},renderOpts:{compile:(a=c()(p()().mark((function n(){var e,a=arguments;return p()().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(6481),t.e(7251)]).then(t.bind(t,97251));case 2:return n.abrupt("return",(e=n.sent).default.apply(e,a));case 3:case"end":return n.stop()}}),n)}))),function(){return a.apply(this,arguments)})}}}},1379:function(n,e,t){t.r(e);var a=t(49412),o=t(32564),r=t(55036),u=t(5587),i=t(35171),p=t(29928),d=t(66415),c=t(19694),l=t(52396);e.default=new Map([["AreaChart",a.Z],["PieChart",o.Z],["BarChart",r.Z],["DotChart",u.Z],["LineChart",i.Z],["RadarChart",p.Z],["HeatMap",d.Z],["Fund",c.Z],["Sliders",l.Z]])},7494:function(n,e,t){t.r(e),t.d(e,{CacheMenu:function(){return r},HiddenMenu:function(){return o},MenuType:function(){return a}});var a=function(n){return n.Menu="1",n.Action="2",n}({}),o=function(n){return n.Yes="1",n.No="2",n}({}),r=function(n){return n.Yes="1",n.No="2",n}({})},82304:function(n,e,t){t.r(e),t.d(e,{texts:function(){return a}});const a=[{value:"图标输入，常用于菜单图标设置。图标由外部自定义传入，方便回显和按需配置，防止包过大。",paraId:0,tocIndex:0},{value:"除了以下参数，其余和 antd ",paraId:1,tocIndex:6},{value:"Input",paraId:1,tocIndex:6},{value:" 组件一样。",paraId:1,tocIndex:6},{value:"参数",paraId:2,tocIndex:6},{value:"说明",paraId:2,tocIndex:6},{value:"类型",paraId:2,tocIndex:6},{value:"默认值",paraId:2,tocIndex:6},{value:"iconData",paraId:2,tocIndex:6},{value:"图标名称和组件的 Map 键值对。",paraId:2,tocIndex:6},{value:"推荐使用内置图标：",paraId:2,tocIndex:6},{value:"import { InputIconsMap } from 'antd-more';",paraId:2,tocIndex:6},{value:"Map<string, React.FC>",paraId:2,tocIndex:6},{value:"new Map([])",paraId:2,tocIndex:6},{value:"showSearch",paraId:2,tocIndex:6},{value:"显示图标搜索框",paraId:2,tocIndex:6},{value:"boolean",paraId:2,tocIndex:6},{value:"true",paraId:2,tocIndex:6},{value:"column",paraId:2,tocIndex:6},{value:"一行显示图标数量。",paraId:2,tocIndex:6},{value:"如果不能被 24 整除，自动向下取整。",paraId:2,tocIndex:6},{value:"number",paraId:2,tocIndex:6},{value:"3",paraId:2,tocIndex:6},{value:"value",paraId:2,tocIndex:6},{value:"图标名称",paraId:2,tocIndex:6},{value:"string",paraId:2,tocIndex:6},{value:"-",paraId:2,tocIndex:6},{value:"onChange",paraId:2,tocIndex:6},{value:"图标修改时触发",paraId:2,tocIndex:6},{value:"(iconName: string) => void",paraId:2,tocIndex:6},{value:"-",paraId:2,tocIndex:6}]},10598:function(n,e){e.Z="import * as React from 'react';\nimport { InputIcon, InputIconsMap } from 'antd-more';\n\nconst Demo = () => {\n  const [value, setValue] = React.useState<string>('');\n\n  const hasIcon = value && InputIconsMap.has(value);\n  const IconComp = InputIconsMap.get(value);\n\n  return (\n    <>\n      <p>\n        当前选择的图标：\n        {hasIcon ? <IconComp /> : '-'}\n      </p>\n      <InputIcon iconData={InputIconsMap} onChange={setValue} column={4} />\n    </>\n  );\n};\n\nexport default Demo;\n"},84742:function(n,e){e.Z='import * as React from \'react\';\nimport { InputIcon, InputIconsMap, BizForm, BizFormItem } from \'antd-more\';\n\nconst Demo = () => {\n  return (\n    <BizForm\n      name="input-icon-bizform-1"\n      onFinish={(values) => {\n        console.log(values);\n      }}\n    >\n      <BizFormItem label="图标" name="icon">\n        <InputIcon iconData={InputIconsMap} />\n      </BizFormItem>\n    </BizForm>\n  );\n};\n\nexport default Demo;\n'},64480:function(n,e){e.Z="import * as React from 'react';\nimport { InputIcon, BizForm, BizFormItem } from 'antd-more';\nimport icons from './icons';\n\nconst Demo = () => {\n  return (\n    <BizForm\n      name=\"input-icon-define-icon\"\n      onFinish={(values) => {\n        console.log(values);\n      }}\n    >\n      <BizFormItem label=\"图标\" name=\"icon\">\n        <InputIcon iconData={icons} />\n      </BizFormItem>\n    </BizForm>\n  );\n};\n\nexport default Demo;\n"},8897:function(n,e){e.Z="import type { FC } from 'react';\nimport {\n  AreaChartOutlined,\n  PieChartOutlined,\n  BarChartOutlined,\n  DotChartOutlined,\n  LineChartOutlined,\n  RadarChartOutlined,\n  HeatMapOutlined,\n  FundOutlined,\n  SlidersOutlined\n} from '@ant-design/icons';\n\nexport type IconProp = [string, FC];\n\nexport default new Map([\n  // 数据类\n  ['AreaChart', AreaChartOutlined],\n  ['PieChart', PieChartOutlined],\n  ['BarChart', BarChartOutlined],\n  ['DotChart', DotChartOutlined],\n  ['LineChart', LineChartOutlined],\n  ['RadarChart', RadarChartOutlined],\n  ['HeatMap', HeatMapOutlined],\n  ['Fund', FundOutlined],\n  ['Sliders', SlidersOutlined]\n]);\n"},87983:function(n,e){e.Z="import * as React from 'react';\nimport { Button, Row, Col, TreeSelect } from 'antd';\nimport {\n  BizForm,\n  ModalForm,\n  BizFormItem,\n  BizFormItemRadio,\n  BizFormItemInput,\n  BizFormItemNumber,\n  InputIcon,\n  InputIconsMap\n} from 'antd-more';\nimport { MenuType, HiddenMenu, CacheMenu } from './type';\n\n// 菜单列表\nconst treeData = [\n  {\n    title: '顶级类目',\n    // value: null,\n    value: '',\n    children: [\n      {\n        title: '首页',\n        value: 1\n      },\n      {\n        title: '系统管理',\n        value: 2,\n        children: [\n          {\n            title: '用户管理',\n            value: 3\n          },\n          {\n            title: '角色管理',\n            value: 4\n          }\n        ]\n      }\n    ]\n  }\n];\n\n// 菜单类型\nconst menuTypeOptions = [\n  {\n    label: '菜单',\n    value: MenuType.Menu\n  },\n  {\n    label: '按钮',\n    value: MenuType.Action\n  }\n];\n\n// 菜单可见\nconst hiddenMenuOptions = [\n  {\n    label: '是',\n    value: HiddenMenu.Yes\n  },\n  {\n    label: '否',\n    value: HiddenMenu.No\n  }\n];\n\n// 菜单缓存\nconst cacheMenuOptions = [\n  {\n    label: '是',\n    value: CacheMenu.Yes\n  },\n  {\n    label: '否',\n    value: CacheMenu.No\n  }\n];\n\nconst Demo = () => {\n  const [form] = BizForm.useForm();\n  const [currentMenuType, setCurrentMenuType] = React.useState(MenuType.Menu);\n  const menuTypeName =\n    menuTypeOptions.find((item) => item.value === (form.getFieldValue('menuType') || MenuType.Menu))\n      ?.label || '';\n  const onValuesChange = (_, { menuType }: { menuType: MenuType }) => {\n    setCurrentMenuType(menuType);\n  };\n  const onOpenChange = (open: boolean) => {\n    if (!open) {\n      form.resetFields();\n      setCurrentMenuType(MenuType.Menu);\n    }\n  };\n\n  return (\n    <ModalForm\n      name=\"input-icon-modal-menu\"\n      title=\"菜单配置\"\n      form={form}\n      trigger={<Button type=\"primary\">菜单配置</Button>}\n      initialValues={{\n        menuType: MenuType.Menu,\n        sort: 0,\n        parent: null,\n        hidden: HiddenMenu.No,\n        cache: CacheMenu.Yes\n      }}\n      onFinish={async (values) => {\n        console.log(values);\n      }}\n      onValuesChange={onValuesChange}\n      onOpenChange={onOpenChange}\n      modalProps={{\n        centered: false\n      }}\n    >\n      <BizFormItemRadio\n        name=\"menuType\"\n        label=\"菜单类型\"\n        options={menuTypeOptions}\n        optionType=\"button\"\n        radioGroupProps={{ buttonStyle: 'solid' }}\n        required\n      />\n      <BizFormItem name=\"parent\" label=\"上级类目\">\n        <TreeSelect treeData={treeData} treeDefaultExpandAll placeholder=\"请选择\" />\n      </BizFormItem>\n      <Row>\n        <Col span={12}>\n          <BizFormItemInput name=\"name\" label={`${menuTypeName}名称`} required />\n        </Col>\n        <Col span={12}>\n          <BizFormItemInput name=\"code\" label={`${menuTypeName}编号`} required />\n        </Col>\n        <Col span={12}>\n          <BizFormItemNumber name=\"sort\" label=\"排序\" precision={0} min={0} />\n        </Col>\n      </Row>\n      {currentMenuType === MenuType.Menu && (\n        <>\n          <BizFormItem label=\"菜单图标\" name=\"icon\">\n            <InputIcon iconData={InputIconsMap} />\n          </BizFormItem>\n          <Row>\n            <Col span={12}>\n              <BizFormItemRadio\n                name=\"hidden\"\n                label=\"是否可见\"\n                options={hiddenMenuOptions}\n                optionType=\"button\"\n                radioGroupProps={{ buttonStyle: 'solid' }}\n                required\n              />\n            </Col>\n            <Col span={12}>\n              <BizFormItemRadio\n                name=\"cache\"\n                label=\"是否缓存\"\n                options={cacheMenuOptions}\n                optionType=\"button\"\n                radioGroupProps={{ buttonStyle: 'solid' }}\n                required\n              />\n            </Col>\n          </Row>\n        </>\n      )}\n    </ModalForm>\n  );\n};\n\nexport default Demo;\n"},43056:function(n,e){e.Z="// 菜单类型\n// 1-菜单 2-按钮\nexport enum MenuType {\n  Menu = '1',\n  Action = '2'\n}\n\n// 菜单可见\n// 1-是 2-否\nexport enum HiddenMenu {\n  Yes = '1',\n  No = '2'\n}\n\n// 菜单缓存\n// 1-是 2-否\nexport enum CacheMenu {\n  Yes = '1',\n  No = '2'\n}\n"}}]);